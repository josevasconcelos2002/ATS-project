/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 20:21:53 GMT 2024
 */

package com.marketplace.vintage;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.marketplace.vintage.Vintage;
import com.marketplace.vintage.carrier.NormalParcelCarrier;
import com.marketplace.vintage.carrier.ParcelCarrier;
import com.marketplace.vintage.carrier.ParcelCarrierController;
import com.marketplace.vintage.carrier.ParcelCarrierManager;
import com.marketplace.vintage.carrier.PremiumParcelCarrier;
import com.marketplace.vintage.expression.Exp4jExpressionSolver;
import com.marketplace.vintage.expression.ExpressionSolver;
import com.marketplace.vintage.item.Item;
import com.marketplace.vintage.item.ItemController;
import com.marketplace.vintage.item.ItemFactory;
import com.marketplace.vintage.item.ItemManager;
import com.marketplace.vintage.item.ItemProperty;
import com.marketplace.vintage.item.ItemType;
import com.marketplace.vintage.item.condition.ItemCondition;
import com.marketplace.vintage.item.condition.UsedItemCondition;
import com.marketplace.vintage.logging.JavaLogger;
import com.marketplace.vintage.logging.Logger;
import com.marketplace.vintage.logging.OnlyWarnLogger;
import com.marketplace.vintage.logging.PrefixLogger;
import com.marketplace.vintage.order.Order;
import com.marketplace.vintage.order.OrderController;
import com.marketplace.vintage.order.OrderFactory;
import com.marketplace.vintage.order.OrderManager;
import com.marketplace.vintage.order.OrderStatus;
import com.marketplace.vintage.order.OrderedItem;
import com.marketplace.vintage.order.invoice.InvoiceLine;
import com.marketplace.vintage.scripting.ScriptController;
import com.marketplace.vintage.time.TimeManager;
import com.marketplace.vintage.user.User;
import com.marketplace.vintage.user.UserController;
import com.marketplace.vintage.user.UserManager;
import com.marketplace.vintage.utils.VintageDate;
import impl.MalaItem;
import impl.PremiumMalaItem;
import impl.PremiumSapatilhasItem;
import impl.TshirtItem;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.UUID;
import java.util.function.Predicate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Vintage_ESTest extends Vintage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      Logger logger0 = PrefixLogger.of("The shopping cart is empty.", (Logger) null);
      // Undeclared exception!
      try { 
        vintage0.jumpTime(logger0, 1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("Too many operands", "Too many operands");
      vintage0.registerParcelCarrier(normalParcelCarrier0);
      vintage0.setCarrierExpeditionPriceExpression(normalParcelCarrier0, "rvb)");
      assertEquals("rvb)", normalParcelCarrier0.getExpeditionPriceExpression());
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = vintage0.createUser("-p", "f*}{", "com.marketplace.vintage.Vintage", "The shopping cart is empty.", "f*}{");
      vintage0.removeItemFromShoppingCart(user0, "\"pYo|H<,OcGr`J0");
      assertEquals("f*}{", user0.getEmail());
      assertEquals("f*}{", user0.getTaxNumber());
      assertEquals("The shopping cart is empty.", user0.getAddress());
      assertEquals("com.marketplace.vintage.Vintage", user0.getName());
      assertEquals("-p", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      JavaLogger javaLogger0 = new JavaLogger();
      // Undeclared exception!
      try { 
        vintage0.jumpTime(javaLogger0, 11);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      JavaLogger javaLogger0 = new JavaLogger();
      OnlyWarnLogger onlyWarnLogger0 = new OnlyWarnLogger(javaLogger0);
      Logger logger0 = PrefixLogger.of((String) null, onlyWarnLogger0);
      VintageDate vintageDate0 = vintage0.jumpTime(logger0, (-3037));
      assertNull(vintageDate0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      LinkedList<OrderedItem> linkedList0 = new LinkedList<OrderedItem>();
      LinkedList<InvoiceLine> linkedList1 = new LinkedList<InvoiceLine>();
      OrderStatus orderStatus0 = OrderStatus.RETURNED;
      Order order0 = new Order("K{Df~QF2!ei+.", uUID0, linkedList0, linkedList1, bigDecimal0, (VintageDate) null, orderStatus0);
      boolean boolean0 = vintage0.isOrderReturnable(order0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      userManager0.createUser(">y%|gOgv}E2J0AY*", "r]?='L$j", ">y%|gOgv}E2J0AY*", "MM_@<pEA}r=(n:>", "MM_@<pEA}r=(n:>");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = vintage0.getUserByEmail("r]?='L$j");
      assertEquals(">y%|gOgv}E2J0AY*", user0.getUsername());
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      OrderedItem orderedItem0 = new OrderedItem(uUID0, (String) null, (String) null, bigDecimal0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) orderedItem0);
      List<User> list0 = vintage0.getTopSellers(1, predicate0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      userManager0.createUser("|B!E", "r]?='L$j", "|B!E", "MM_@<pEA}r=(n:>", "MM_@<pEA}r=(n:>");
      HashMap<ItemProperty, Object> hashMap0 = new HashMap<ItemProperty, Object>();
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) hashMap0);
      List<User> list0 = vintage0.getTopSellers(2195, predicate0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      ScriptController scriptController0 = new ScriptController();
      UserController userController0 = new UserController(userManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      List<User> list0 = vintage0.getTopBuyers(43, (Predicate<VintageDate>) null);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      User user0 = userManager0.createUser(">y%|gOgv}E2J0AY*", "r]?='L$j", ">y%|gOgv}E2J0AY*", "r]?='L$j", "r]?='L$j");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, (ParcelCarrierController) null, exp4jExpressionSolver0, userController0, scriptController0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) "com.marketplace.vintage.Vintage");
      List<User> list0 = vintage0.getTopBuyers(54, predicate0);
      assertTrue(list0.contains(user0));
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("", "");
      parcelCarrierController0.registerParcelCarrier(premiumParcelCarrier0);
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      ParcelCarrier parcelCarrier0 = vintage0.getParcelCarrierWithMoreMoneyReceived();
      assertNotSame(parcelCarrier0, premiumParcelCarrier0);
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier(">y%|gOgv}E2J0AY*", "cbJ[,P}");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      BigDecimal bigDecimal0 = vintage0.getParcelCarrierReceivedMoney(normalParcelCarrier0);
      assertEquals((short)0, bigDecimal0.shortValue());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      User user0 = new User("The shopping cart contains items that are out of stock.", "The shopping cart contains items that are out of stock.", "The shopping cart contains items that are out of stock.", "MM_@<pEA}r=(n:>", "The shopping cart contains items that are out of stock.");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(0, 0);
      BigInteger bigInteger0 = BigInteger.ONE;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      PremiumSapatilhasItem premiumSapatilhasItem0 = new PremiumSapatilhasItem(uUID0, "+g`7", 711, usedItemCondition0, "com.marketplace.vintage.Vintage", "com.marketplace.vintage.Vintage", bigDecimal0, "The shopping cart is empty.", 711, false, (String) null, (-1219), 711);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) premiumSapatilhasItem0);
      BigDecimal bigDecimal1 = vintage0.getMoneyFromUserSalesByDatePredicate(user0, predicate0);
      assertEquals((byte)0, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      int int0 = vintage0.getCurrentYear();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 10);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      int int0 = vintage0.getCurrentYear();
      assertEquals(10, int0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      VintageDate vintageDate0 = VintageDate.of(1, 1, 1);
      VintageDate vintageDate1 = vintageDate0.plusDays((-4510));
      TimeManager timeManager0 = new TimeManager(vintageDate1);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      int int0 = vintage0.getCurrentYear();
      assertEquals((-12), int0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      VintageDate vintageDate1 = vintage0.getCurrentDate();
      assertSame(vintageDate1, vintageDate0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      userManager0.createUser(">y%|gOgv}E2J0AY*", "r]?='L$j", ">y%|gOgv}E2J0AY*", "r]?='L$j", "r]?='L$j");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, (ParcelCarrierController) null, exp4jExpressionSolver0, userController0, scriptController0);
      List<User> list0 = vintage0.getAllUsers();
      assertFalse(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("Too many operands", "Too many operands");
      vintage0.registerParcelCarrier(normalParcelCarrier0);
      ItemType itemType0 = ItemType.MALA;
      List<ParcelCarrier> list0 = vintage0.getAllParcelCarriersCompatibleWith(itemType0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      List<ParcelCarrier> list0 = vintage0.getAllParcelCarriers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      boolean boolean0 = vintage0.existsUserWithUsername("f*}{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.validateUsername("The shopping cart contains items that are out of stock.");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The user's username cannot contain spaces
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      ScriptController scriptController0 = new ScriptController();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("", "E.S4`^Z&6^z");
      // Undeclared exception!
      try { 
        vintage0.setCarrierExpeditionPriceExpression(premiumParcelCarrier0, "E.S4`^Z&6^z");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A carrier with the name  was not found
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController((ItemManager) null, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, (UserController) null, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      LinkedList<OrderedItem> linkedList0 = new LinkedList<OrderedItem>();
      LinkedList<InvoiceLine> linkedList1 = new LinkedList<InvoiceLine>();
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      Order order0 = new Order((String) null, uUID0, linkedList0, linkedList1, bigDecimal0, (VintageDate) null);
      // Undeclared exception!
      try { 
        vintage0.returnOrder(order0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An order with the id null was not found
         //
         verifyException("com.marketplace.vintage.order.OrderManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.returnOrder((Order) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.order.OrderController", e);
      }
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      UsedItemCondition usedItemCondition0 = new UsedItemCondition((-1), 54);
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      PremiumSapatilhasItem premiumSapatilhasItem0 = new PremiumSapatilhasItem(uUID0, "S8 bT >e`7VhAIX44", 54, usedItemCondition0, "#DCi&5Y", "#DCi&5Y", bigDecimal0, "S8 bT >e`7VhAIX44", (-1), false, "#DCi&5Y", (-1), (-1));
      // Undeclared exception!
      try { 
        vintage0.removeItemStock(premiumSapatilhasItem0, 59);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An item with the id S8 bT >e`7VhAIX44 was not found
         //
         verifyException("com.marketplace.vintage.item.ItemManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderController orderController0 = new OrderController((OrderManager) null, (OrderFactory) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.removeItemStock((Item) null, 711);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.item.ItemController", e);
      }
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("", "");
      // Undeclared exception!
      try { 
        vintage0.registerParcelCarrier(normalParcelCarrier0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      BigDecimal bigDecimal0 = BigDecimal.ONE;
      LinkedList<OrderedItem> linkedList0 = new LinkedList<OrderedItem>();
      LinkedList<InvoiceLine> linkedList1 = new LinkedList<InvoiceLine>();
      OrderStatus orderStatus0 = OrderStatus.ORDERED;
      Order order0 = new Order("K{Df~QF2!ei+.", uUID0, linkedList0, linkedList1, bigDecimal0, (VintageDate) null, orderStatus0);
      User user0 = new User(uUID0, ",G/,Y)JewQ/8%J5", (String) null, "P5,qq,tZe\"a3r%7d`", "6V", "_z-$)@:p.3o1");
      // Undeclared exception!
      try { 
        vintage0.registerOrder(order0, user0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the id 00000000-0100-4000-8200-000003000000 was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = vintage0.createUser("S@:W(o<", "S@:W(o<", "l", "S@:W(o<", "");
      UUID uUID0 = MockUUID.fromString("");
      LinkedList<OrderedItem> linkedList0 = new LinkedList<OrderedItem>();
      LinkedList<InvoiceLine> linkedList1 = new LinkedList<InvoiceLine>();
      BigDecimal bigDecimal0 = new BigDecimal(59);
      Order order0 = new Order("S@:W(o<", uUID0, linkedList0, linkedList1, bigDecimal0, (VintageDate) null);
      // Undeclared exception!
      try { 
        vintage0.registerOrder(order0, user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController((OrderManager) null, orderFactory0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, (ParcelCarrierController) null, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.itemHasStock("CCgg%3fqVO/}1/");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An item with the id CCgg%3fqVO/}1/ was not found
         //
         verifyException("com.marketplace.vintage.item.ItemManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController((ItemManager) null, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("G1Qt", "% dSDz!#z");
      List<String> list0 = normalParcelCarrier0.getDeliveredOrders();
      // Undeclared exception!
      try { 
        vintage0.isFormulaValid("% dSDz!#z", list0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Unknown function or variable 'dSDz' at pos 2 in expression '% dSDz!#z'
         //
         verifyException("net.objecthunter.exp4j.tokenizer.Tokenizer", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderController orderController0 = new OrderController((OrderManager) null, (OrderFactory) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = userController0.createUser(".[u^UKH7X<", "vintage", ".F", "Osxg4", "asin");
      List<String> list0 = user0.getCompletedSellsOrderIdsList();
      // Undeclared exception!
      try { 
        vintage0.isFormulaValid(".[u^UKH7X<", list0);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.isFormulaValid("u", (List<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.expression.Exp4jExpressionSolver", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.isFormulaValid("", (List<String>) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Expression can not be empty
         //
         verifyException("net.objecthunter.exp4j.ExpressionBuilder", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderController orderController0 = new OrderController((OrderManager) null, (OrderFactory) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getVintageProfit();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.order.OrderController", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getUserByUsername("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.user.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController((ItemManager) null, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController((OrderManager) null, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      // Undeclared exception!
      try { 
        vintage0.getUserById(uUID0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the id 00000000-0100-4000-8200-000003000000 was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getUserByEmail((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.user.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      UUID uUID0 = MockUUID.fromString("r]?='L$j");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      BigDecimal bigDecimal0 = new BigDecimal(2433);
      PremiumMalaItem premiumMalaItem0 = new PremiumMalaItem(uUID0, "k]C|}vPQM", 2433, (ItemCondition) null, "+g`7", "com.marketplace.vintage.Vintage", bigDecimal0, "New", (-282), "", (-1698), 2433);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) premiumMalaItem0);
      // Undeclared exception!
      try { 
        vintage0.getTopSellers((-1698), predicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -1698
         //
         verifyException("java.util.stream.ReferencePipeline", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, (UserController) null, scriptController0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) null);
      // Undeclared exception!
      try { 
        vintage0.getTopBuyers(0, predicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getParcelCarrierWithMoreMoneyReceived();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier(">y%|gOgv}E2J0AY*", "cbJ[,P}");
      normalParcelCarrier0.addDeliveredOrder("r]?='L$j");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getParcelCarrierReceivedMoney(normalParcelCarrier0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An order with the id r]?='L$j was not found
         //
         verifyException("com.marketplace.vintage.order.OrderManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getOrder("");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An order with the id  was not found
         //
         verifyException("com.marketplace.vintage.order.OrderManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = new User("Y\f`r^_n{~UoIuq", "Y\f`r^_n{~UoIuq", "2rc#rv,eA~rLL", "2rc#rv,eA~rLL", "2rc#rv,eA~rLL");
      user0.addCompletedOrderId("Y\f`r^_n{~UoIuq");
      // Undeclared exception!
      try { 
        vintage0.getMoneySpentByUserInDatePredicate(user0, (Predicate<VintageDate>) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An order with the id Y\f`r^_n{~UoIuq was not found
         //
         verifyException("com.marketplace.vintage.order.OrderManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      VintageDate vintageDate0 = VintageDate.of(1, 1, 93);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, (ExpressionSolver) null, userController0, scriptController0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) orderController0);
      // Undeclared exception!
      try { 
        vintage0.getMoneySpentByUserInDatePredicate((User) null, predicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.stats.StatsManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController((ItemManager) null, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, (UserController) null, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getItem((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.item.ItemController", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, (ParcelCarrierController) null, (ExpressionSolver) null, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getCurrentDate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getCarrierByName("o!<7G_B");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, (ExpressionSolver) null, userController0, scriptController0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) null);
      // Undeclared exception!
      try { 
        vintage0.getBestSeller(predicate0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      ItemController itemController0 = new ItemController((ItemManager) null, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, (ParcelCarrierController) null, exp4jExpressionSolver0, (UserController) null, (ScriptController) null);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) "The shopping cart contains items that are out of stock.");
      // Undeclared exception!
      try { 
        vintage0.getBestSeller(predicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getAllUsers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.user.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      ScriptController scriptController0 = new ScriptController();
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      ItemType itemType0 = ItemType.TSHIRT;
      // Undeclared exception!
      try { 
        vintage0.getAllParcelCarriersCompatibleWith(itemType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(8, 8, 8);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getAllOrders();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderController orderController0 = new OrderController(orderManager0, (OrderFactory) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getAllItems();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.existsUserWithEmail("yC8p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.user.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.existsOrder("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.existsItem("net.objecthunter.exp4j.tokenizer.OpenParenthesesToken");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderController orderController0 = new OrderController((OrderManager) null, (OrderFactory) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.createUser("", (String) null, "", "", "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderController orderController0 = new OrderController((OrderManager) null, (OrderFactory) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.createUser("", "", "", "", "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The user's username cannot be null or empty
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      ItemController itemController0 = new ItemController((ItemManager) null, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.containsItemById("f*}{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.item.ItemController", e);
      }
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.containsCarrierByName("|B!E");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.assembleOrder("", (User) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      User user0 = userManager0.createUser(">y%|gOgv}E2J0AY*", "r]?='L$j", ">y%|gOgv}E2J0AY*", "MM_@<pEA}r=(n:>", "MM_@<pEA}r=(n:>");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderController orderController0 = new OrderController((OrderManager) null, (OrderFactory) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.assembleOrder(user0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.order.OrderController", e);
      }
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(97, 97);
      BigInteger bigInteger0 = BigInteger.TEN;
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      PremiumSapatilhasItem premiumSapatilhasItem0 = new PremiumSapatilhasItem((UUID) null, ".", 97, usedItemCondition0, ".", "", bigDecimal0, "", 97, false, "", (-1), 1749);
      // Undeclared exception!
      try { 
        vintage0.addItemStock(premiumSapatilhasItem0, 1749);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An item with the id . was not found
         //
         verifyException("com.marketplace.vintage.item.ItemManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.fromString("");
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(0, (-1067));
      BigDecimal bigDecimal0 = new BigDecimal((double) (-1067));
      MalaItem malaItem0 = new MalaItem(uUID0, "", 0, usedItemCondition0, "", "", bigDecimal0, "com.marketplace.vintage.carrier.ParcelCarrierType", 0, "", 0, 0);
      // Undeclared exception!
      try { 
        vintage0.addItemStock(malaItem0, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      User user0 = new User("The shopping cart contains items that are out of stock.", "The shopping cart contains items that are out of stock.", "The shopping cart contains items that are out of stock.", "MM_@<pEA}r=(n:>", "The shopping cart contains items that are out of stock.");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.assembleOrder(";-[1Sy*K", user0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The shopping cart is empty.
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = vintage0.createUser("EzEnOx]d-MZun+N", "EzEnOx]d-MZun+N", "", "", "");
      ItemType itemType0 = ItemType.MALA_PREMIUM;
      HashMap<ItemProperty, Object> hashMap0 = new HashMap<ItemProperty, Object>(1);
      // Undeclared exception!
      try { 
        vintage0.registerNewItem("EzEnOx]d-MZun+N", user0, itemType0, (Map<ItemProperty, Object>) hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The item property STOCK is required
         //
         verifyException("com.marketplace.vintage.item.ItemFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      List<Order> list0 = vintage0.getAllOrders();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      List<User> list0 = vintage0.getAllUsers();
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      JavaLogger javaLogger0 = new JavaLogger();
      VintageDate vintageDate1 = vintage0.jumpTime(javaLogger0, (-2985));
      assertSame(vintageDate1, vintageDate0);
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      User user0 = userManager0.createUser(">y%|gOgv}E2J0AY*", "r]?='L$j", ">y%|gOgv}E2J0AY*", "MM_@<pEA}r=(n:>", "MM_@<pEA}r=(n:>");
      user0.addItemToShoppingCart((String) null);
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.assembleOrder(user0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An item with the id null was not found
         //
         verifyException("com.marketplace.vintage.item.ItemManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController((ItemManager) null, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = new User((UUID) null, "The shopping cart is empty.", "", "", "g", "");
      // Undeclared exception!
      try { 
        vintage0.assembleOrder((String) null, user0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The shopping cart is empty.
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      ItemType itemType0 = ItemType.SAPATILHAS;
      HashMap<ItemProperty, Object> hashMap0 = new HashMap<ItemProperty, Object>();
      // Undeclared exception!
      try { 
        vintage0.registerNewItem((String) null, (User) null, itemType0, (Map<ItemProperty, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getOrder("The shopping cart is empty.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      boolean boolean0 = vintage0.existsItem("#TZOD:[H");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = new User("Y\f`r^_n{~UoIuq", "Y\f`r^_n{~UoIuq", "2rc#rv,eA~rLL", "2rc#rv,eA~rLL", "2rc#rv,eA~rLL");
      BigDecimal bigDecimal0 = vintage0.getMoneySpentByUserInDatePredicate(user0, (Predicate<VintageDate>) null);
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      boolean boolean0 = vintage0.containsCarrierByName("yC8p");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      boolean boolean0 = vintage0.existsOrder(":]cOY^\"");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("PARCEL_CARRIER_NAME", "r\n<A");
      List<String> list0 = normalParcelCarrier0.getDeliveredOrders();
      boolean boolean0 = vintage0.isFormulaValid("2", list0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      List<Item> list0 = vintage0.getAllItems();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = new User("Y\f`r^_n{~UoIuq", "Y\f`r^_n{~UoIuq", "2rc#rv,eA~rLL", "2rc#rv,eA~rLL", "2rc#rv,eA~rLL");
      // Undeclared exception!
      try { 
        vintage0.removeItemFromShoppingCart(user0, "2rc#rv,eA~rLL");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the id 00000000-0100-4000-8200-000003000000 was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getItem("4Q7k'Vo^XZ{IUl=");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // An item with the id 4Q7k'Vo^XZ{IUl= was not found
         //
         verifyException("com.marketplace.vintage.item.ItemManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getParcelCarrierWithMoreMoneyReceived();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList$Itr", e);
      }
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      User user0 = userManager0.createUser(">y%|gOgv}E2J0AY*", "r]?='L$j", ">y%|gOgv}E2J0AY*", "MM_@<pEA}r=(n:>", "MM_@<pEA}r=(n:>");
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.assembleOrder(user0);
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // The shopping cart is empty.
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.fromString("K{Df~QF2!ei+.");
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(1, 2087);
      byte[] byteArray0 = new byte[8];
      BigInteger bigInteger0 = new BigInteger(byteArray0);
      BigDecimal bigDecimal0 = new BigDecimal(bigInteger0);
      TshirtItem.TshirtItemSize tshirtItem_TshirtItemSize0 = TshirtItem.TshirtItemSize.EXTRA_LARGE;
      TshirtItem.TshirtItemPattern tshirtItem_TshirtItemPattern0 = TshirtItem.TshirtItemPattern.STRIPES;
      TshirtItem tshirtItem0 = new TshirtItem(uUID0, "K{Df~QF2!ei+.", 1, usedItemCondition0, "", "The shopping cart is empty.", bigDecimal0, "The shopping cart is empty.", tshirtItem_TshirtItemSize0, tshirtItem_TshirtItemPattern0);
      // Undeclared exception!
      try { 
        vintage0.removeItemStock(tshirtItem0, (-462));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Stock change cannot be negative.
         //
         verifyException("com.marketplace.vintage.item.ItemController", e);
      }
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getParcelCarrierReceivedMoney((ParcelCarrier) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.stats.StatsManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getUserByEmail("#TZOD:[H");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the email #TZOD:[H was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = vintage0.createUser("S@:W(o<", "S@:W(o<", "l", "S@:W(o<", "");
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) user0);
      User user1 = vintage0.getBestSeller(predicate0);
      assertEquals("S@:W(o<", user1.getAddress());
      assertEquals("", user1.getTaxNumber());
      assertEquals("l", user1.getName());
      assertEquals("S@:W(o<", user1.getEmail());
      assertEquals("S@:W(o<", user1.getUsername());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      VintageDate vintageDate0 = VintageDate.of(11, 11, 0);
      TimeManager timeManager0 = new TimeManager(vintageDate0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("Too many operands", "Too many operands");
      vintage0.registerParcelCarrier(normalParcelCarrier0);
      // Undeclared exception!
      try { 
        vintage0.registerParcelCarrier(normalParcelCarrier0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A carrier with that name already exists
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController((ItemManager) null, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getUserByUsername("rwdwy&~1<G");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the username rwdwy&~1<G was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.randomUUID();
      // Undeclared exception!
      try { 
        vintage0.getUserById(uUID0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.user.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      boolean boolean0 = vintage0.existsUserWithEmail("yC8p");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UUID uUID0 = MockUUID.fromString("");
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(19, (-3037));
      BigDecimal bigDecimal0 = new BigDecimal(2147483645);
      PremiumMalaItem premiumMalaItem0 = new PremiumMalaItem(uUID0, "", 2625, usedItemCondition0, "The shopping cart contains items that are out of stock.", "yC8p", bigDecimal0, "", 19, "", 19, 447);
      // Undeclared exception!
      try { 
        vintage0.addItemStock(premiumMalaItem0, (-3037));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Stock change cannot be negative.
         //
         verifyException("com.marketplace.vintage.item.ItemController", e);
      }
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.isOrderReturnable((Order) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      User user0 = vintage0.createUser("&", "com.marketplace.vintage.input.impl.StdinInputPrompter", "&", "&", "&");
      ItemType itemType0 = ItemType.SAPATILHAS;
      HashMap<ItemProperty, Object> hashMap0 = new HashMap<ItemProperty, Object>();
      // Undeclared exception!
      try { 
        vintage0.registerNewItem(user0, itemType0, (Map<ItemProperty, Object>) hashMap0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.item.ItemController", e);
      }
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      boolean boolean0 = vintage0.containsItemById("f*}{");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController((OrderManager) null, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) null);
      // Undeclared exception!
      try { 
        vintage0.getMoneyFromUserSalesByDatePredicate((User) null, predicate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.stats.StatsManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      BigDecimal bigDecimal0 = vintage0.getVintageProfit();
      assertEquals((byte)0, bigDecimal0.byteValue());
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getAllParcelCarriers();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.itemHasStock("cbrt");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      vintage0.validateUsername("0");
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      ScriptController scriptController0 = new ScriptController();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.setCarrierExpeditionPriceExpression((ParcelCarrier) null, "yC8p");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      VintageDate vintageDate0 = vintage0.getCurrentDate();
      assertNull(vintageDate0);
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      ItemController itemController0 = new ItemController((ItemManager) null, (ItemFactory) null);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, (ExpressionSolver) null, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getCarrierByName((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A carrier with the name null was not found
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderController orderController0 = new OrderController(orderManager0, (OrderFactory) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      ItemType itemType0 = ItemType.MALA_PREMIUM;
      List<ParcelCarrier> list0 = vintage0.getAllParcelCarriersCompatibleWith(itemType0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, (ScriptController) null);
      User user0 = new User("j5Bi/;C,", "", "j5Bi/;C,", "", "com.marketplace.vintage.scripting.Script");
      // Undeclared exception!
      try { 
        vintage0.addItemToShoppingCart(user0, "j5Bi/;C,");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the id 00000000-0100-4000-8200-000003000000 was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      Predicate<VintageDate> predicate0 = Predicate.isEqual((Object) null);
      // Undeclared exception!
      try { 
        vintage0.getTopBuyers((-3116), predicate0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // -3116
         //
         verifyException("java.util.stream.ReferencePipeline", e);
      }
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.existsUserWithUsername("f*}{");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.user.UserController", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      OrderManager orderManager0 = new OrderManager();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      User user0 = userManager0.createUser("|B!E", "r]?='L$j", "|B!E", "MM_@<pEA}r=(n:>", "MM_@<pEA}r=(n:>");
      HashMap<ItemProperty, Object> hashMap0 = new HashMap<ItemProperty, Object>();
      ItemType itemType0 = ItemType.TSHIRT;
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.registerNewItem(user0, itemType0, (Map<ItemProperty, Object>) hashMap0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // The item property STOCK is required
         //
         verifyException("com.marketplace.vintage.item.ItemFactory", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      ItemFactory itemFactory0 = new ItemFactory();
      ItemManager itemManager0 = new ItemManager();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, (UserController) null, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getTopSellers(42, (Predicate<VintageDate>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderFactory orderFactory0 = new OrderFactory();
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      OrderManager orderManager0 = new OrderManager();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, (TimeManager) null, (ParcelCarrierController) null, exp4jExpressionSolver0, userController0, scriptController0);
      // Undeclared exception!
      try { 
        vintage0.getCurrentYear();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }
}
