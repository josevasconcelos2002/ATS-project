/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 20:46:17 GMT 2024
 */

package com.marketplace.vintage.commands.item;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.marketplace.vintage.Vintage;
import com.marketplace.vintage.carrier.ParcelCarrierController;
import com.marketplace.vintage.carrier.ParcelCarrierManager;
import com.marketplace.vintage.commands.item.ItemListAllCommand;
import com.marketplace.vintage.expression.Exp4jExpressionSolver;
import com.marketplace.vintage.input.impl.StdinInputPrompter;
import com.marketplace.vintage.item.ItemController;
import com.marketplace.vintage.item.ItemFactory;
import com.marketplace.vintage.item.ItemManager;
import com.marketplace.vintage.item.condition.UsedItemCondition;
import com.marketplace.vintage.logging.JavaLogger;
import com.marketplace.vintage.order.OrderController;
import com.marketplace.vintage.scripting.ScriptController;
import com.marketplace.vintage.time.TimeManager;
import com.marketplace.vintage.user.User;
import com.marketplace.vintage.user.UserController;
import com.marketplace.vintage.user.UserManager;
import com.marketplace.vintage.utils.VintageDate;
import impl.PremiumMalaItem;
import java.math.BigDecimal;
import java.util.UUID;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.util.MockUUID;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ItemListAllCommand_ESTest extends ItemListAllCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      UUID uUID0 = MockUUID.randomUUID();
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(968, 968);
      BigDecimal bigDecimal0 = BigDecimal.TEN;
      PremiumMalaItem premiumMalaItem0 = new PremiumMalaItem(uUID0, "G%", 968, usedItemCondition0, "G%", "G%", bigDecimal0, "G%", 968, "G%", 968, 968);
      itemManager0.registerItem(premiumMalaItem0);
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      JavaLogger javaLogger0 = new JavaLogger();
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      String[] stringArray0 = new String[5];
      User user0 = new User(uUID0, "M2}", "gRG;", "gRG;", "gRG;", " R<JP:PM");
      userManager0.registerUser(user0);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      ItemListAllCommand itemListAllCommand0 = new ItemListAllCommand(vintage0);
      // Undeclared exception!
      try { 
        itemListAllCommand0.executeSafely(javaLogger0, stdinInputPrompter0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      JavaLogger javaLogger0 = new JavaLogger();
      String[] stringArray0 = new String[14];
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      UserController userController0 = new UserController((UserManager) null);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      ItemListAllCommand itemListAllCommand0 = new ItemListAllCommand(vintage0);
      itemListAllCommand0.executeSafely(javaLogger0, stdinInputPrompter0, stringArray0);
      assertEquals(14, stringArray0.length);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      UUID uUID0 = MockUUID.randomUUID();
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(875, 875);
      BigDecimal bigDecimal0 = new BigDecimal(875);
      PremiumMalaItem premiumMalaItem0 = new PremiumMalaItem(uUID0, " from ", 875, usedItemCondition0, " from ", " from ", bigDecimal0, " from ", 875, " from ", 875, 875);
      itemManager0.registerItem(premiumMalaItem0);
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      JavaLogger javaLogger0 = new JavaLogger();
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      String[] stringArray0 = new String[15];
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Vintage vintage0 = new Vintage(itemController0, (OrderController) null, (TimeManager) null, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      ItemListAllCommand itemListAllCommand0 = new ItemListAllCommand(vintage0);
      // Undeclared exception!
      try { 
        itemListAllCommand0.executeSafely(javaLogger0, stdinInputPrompter0, stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the id 00000000-0100-4000-8200-000003000000 was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }
}
