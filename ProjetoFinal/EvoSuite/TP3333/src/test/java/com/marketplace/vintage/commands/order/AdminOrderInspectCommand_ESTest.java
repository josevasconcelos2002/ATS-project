/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 20:50:10 GMT 2024
 */

package com.marketplace.vintage.commands.order;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.marketplace.vintage.Vintage;
import com.marketplace.vintage.carrier.ParcelCarrierController;
import com.marketplace.vintage.carrier.ParcelCarrierManager;
import com.marketplace.vintage.commands.order.AdminOrderInspectCommand;
import com.marketplace.vintage.expression.ExpressionSolver;
import com.marketplace.vintage.input.InputPrompter;
import com.marketplace.vintage.input.impl.StdinInputPrompter;
import com.marketplace.vintage.item.ItemController;
import com.marketplace.vintage.item.ItemFactory;
import com.marketplace.vintage.item.ItemManager;
import com.marketplace.vintage.logging.JavaLogger;
import com.marketplace.vintage.logging.Logger;
import com.marketplace.vintage.order.OrderController;
import com.marketplace.vintage.order.OrderFactory;
import com.marketplace.vintage.order.OrderManager;
import com.marketplace.vintage.scripting.ScriptController;
import com.marketplace.vintage.time.TimeManager;
import com.marketplace.vintage.user.UserController;
import com.marketplace.vintage.user.UserManager;
import com.marketplace.vintage.utils.VintageDate;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AdminOrderInspectCommand_ESTest extends AdminOrderInspectCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      AdminOrderInspectCommand adminOrderInspectCommand0 = new AdminOrderInspectCommand((Vintage) null);
      JavaLogger javaLogger0 = new JavaLogger();
      String[] stringArray0 = new String[2];
      // Undeclared exception!
      try { 
        adminOrderInspectCommand0.executeSafely(javaLogger0, (InputPrompter) null, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.commands.order.AdminOrderInspectCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, (ExpressionSolver) null, userController0, scriptController0);
      AdminOrderInspectCommand adminOrderInspectCommand0 = new AdminOrderInspectCommand(vintage0);
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        adminOrderInspectCommand0.executeSafely((Logger) null, stdinInputPrompter0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.marketplace.vintage.commands.order.AdminOrderInspectCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      OrderManager orderManager0 = new OrderManager();
      OrderFactory orderFactory0 = new OrderFactory();
      OrderController orderController0 = new OrderController(orderManager0, orderFactory0);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      JavaLogger javaLogger0 = new JavaLogger();
      String[] stringArray0 = new String[11];
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      Vintage vintage0 = new Vintage((ItemController) null, orderController0, (TimeManager) null, parcelCarrierController0, (ExpressionSolver) null, userController0, scriptController0);
      AdminOrderInspectCommand adminOrderInspectCommand0 = new AdminOrderInspectCommand(vintage0);
      adminOrderInspectCommand0.executeSafely(javaLogger0, stdinInputPrompter0, stringArray0);
      assertEquals(1, adminOrderInspectCommand0.getMinArgs());
  }
}
