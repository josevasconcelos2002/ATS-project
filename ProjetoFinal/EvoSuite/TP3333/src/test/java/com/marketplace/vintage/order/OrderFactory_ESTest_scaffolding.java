/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Sun May 26 20:35:23 GMT 2024
 */

package com.marketplace.vintage.order;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class OrderFactory_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "com.marketplace.vintage.order.OrderFactory"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "Cp1252"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "C:\\Users\\silva\\AppData\\Local\\Temp\\"); 
    java.lang.System.setProperty("user.country", "GB"); 
    java.lang.System.setProperty("user.dir", "C:\\Users\\silva\\Downloads\\trabalhos_POO 2\\trabalhos_POO\\TP3333"); 
    java.lang.System.setProperty("user.home", "C:\\Users\\silva"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "silva"); 
    java.lang.System.setProperty("user.timezone", "Europe/London"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(OrderFactory_ESTest_scaffolding.class.getClassLoader() ,
      "net.objecthunter.exp4j.function.Functions$12",
      "net.objecthunter.exp4j.ValidationResult",
      "com.marketplace.vintage.item.condition.UsedItemCondition",
      "net.objecthunter.exp4j.function.Functions$11",
      "impl.PremiumSapatilhasItem",
      "net.objecthunter.exp4j.function.Functions$10",
      "com.marketplace.vintage.order.Order",
      "net.objecthunter.exp4j.function.Functions$16",
      "net.objecthunter.exp4j.function.Function",
      "net.objecthunter.exp4j.function.Functions$15",
      "net.objecthunter.exp4j.function.Functions",
      "net.objecthunter.exp4j.function.Functions$14",
      "net.objecthunter.exp4j.function.Functions$13",
      "net.objecthunter.exp4j.function.Functions$19",
      "net.objecthunter.exp4j.function.Functions$18",
      "net.objecthunter.exp4j.function.Functions$17",
      "impl.SapatilhasItem",
      "net.objecthunter.exp4j.tokenizer.OpenParenthesesToken",
      "com.marketplace.vintage.carrier.ParcelCarrier",
      "com.marketplace.vintage.utils.VintageDate",
      "impl.MalaItem",
      "com.marketplace.vintage.order.OrderFactory$1",
      "net.objecthunter.exp4j.tokenizer.OperatorToken",
      "net.objecthunter.exp4j.tokenizer.FunctionToken",
      "com.marketplace.vintage.carrier.PremiumParcelCarrier",
      "net.objecthunter.exp4j.tokenizer.NumberToken",
      "com.marketplace.vintage.order.OrderBuilder",
      "impl.TshirtItem$TshirtItemPattern",
      "com.marketplace.vintage.expression.ExpressionSolver",
      "com.marketplace.vintage.item.ItemProperty",
      "com.marketplace.vintage.carrier.NormalParcelCarrier",
      "com.marketplace.vintage.VintageConstants",
      "net.objecthunter.exp4j.ExpressionBuilder",
      "com.marketplace.vintage.order.OrderFactory",
      "net.objecthunter.exp4j.operator.Operator",
      "impl.TshirtItem$1",
      "net.objecthunter.exp4j.ArrayStack",
      "net.objecthunter.exp4j.function.Functions$1",
      "net.objecthunter.exp4j.tokenizer.Tokenizer",
      "com.marketplace.vintage.item.condition.ItemConditionType",
      "impl.PremiumMalaItem",
      "net.objecthunter.exp4j.function.Functions$4",
      "net.objecthunter.exp4j.function.Functions$5",
      "net.objecthunter.exp4j.function.Functions$2",
      "net.objecthunter.exp4j.operator.Operators",
      "net.objecthunter.exp4j.function.Functions$3",
      "com.marketplace.vintage.expression.Exp4jExpressionSolver",
      "com.marketplace.vintage.item.Item$1",
      "net.objecthunter.exp4j.tokenizer.Token",
      "com.marketplace.vintage.item.ItemType",
      "net.objecthunter.exp4j.function.Functions$8",
      "impl.TshirtItem$TshirtItemSize",
      "net.objecthunter.exp4j.function.Functions$9",
      "net.objecthunter.exp4j.function.Functions$6",
      "com.marketplace.vintage.item.Item",
      "com.marketplace.vintage.order.invoice.InvoiceLine",
      "net.objecthunter.exp4j.function.Functions$7",
      "com.marketplace.vintage.item.condition.ItemCondition",
      "com.marketplace.vintage.order.OrderStatus",
      "net.objecthunter.exp4j.function.Functions$23",
      "net.objecthunter.exp4j.operator.Operators$7",
      "net.objecthunter.exp4j.function.Functions$22",
      "net.objecthunter.exp4j.shuntingyard.ShuntingYard",
      "net.objecthunter.exp4j.operator.Operators$6",
      "net.objecthunter.exp4j.function.Functions$21",
      "net.objecthunter.exp4j.function.Functions$20",
      "net.objecthunter.exp4j.tokenizer.UnknownFunctionOrVariableException",
      "net.objecthunter.exp4j.operator.Operators$8",
      "net.objecthunter.exp4j.Expression",
      "com.marketplace.vintage.carrier.ParcelCarrierType",
      "net.objecthunter.exp4j.tokenizer.VariableToken",
      "impl.TshirtItem",
      "net.objecthunter.exp4j.tokenizer.CloseParenthesesToken",
      "net.objecthunter.exp4j.operator.Operators$3",
      "net.objecthunter.exp4j.operator.Operators$2",
      "net.objecthunter.exp4j.operator.Operators$5",
      "net.objecthunter.exp4j.operator.Operators$4",
      "net.objecthunter.exp4j.tokenizer.ArgumentSeparatorToken",
      "com.marketplace.vintage.order.OrderedItem",
      "net.objecthunter.exp4j.operator.Operators$1"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("java.util.function.Supplier", false, OrderFactory_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(OrderFactory_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "com.marketplace.vintage.order.OrderFactory",
      "com.marketplace.vintage.item.condition.ItemConditionType",
      "com.marketplace.vintage.order.OrderFactory$1",
      "com.marketplace.vintage.item.condition.UsedItemCondition",
      "com.marketplace.vintage.item.Item",
      "impl.SapatilhasItem",
      "impl.MalaItem",
      "impl.PremiumMalaItem",
      "impl.TshirtItem",
      "impl.TshirtItem$1",
      "com.marketplace.vintage.item.Item$1",
      "com.marketplace.vintage.carrier.ParcelCarrier",
      "com.marketplace.vintage.carrier.NormalParcelCarrier",
      "com.marketplace.vintage.carrier.ParcelCarrierType",
      "com.marketplace.vintage.expression.Exp4jExpressionSolver",
      "net.objecthunter.exp4j.ExpressionBuilder",
      "impl.PremiumSapatilhasItem",
      "net.objecthunter.exp4j.function.Function",
      "net.objecthunter.exp4j.function.Functions$1",
      "net.objecthunter.exp4j.function.Functions$2",
      "net.objecthunter.exp4j.function.Functions$3",
      "net.objecthunter.exp4j.function.Functions$4",
      "net.objecthunter.exp4j.function.Functions$5",
      "net.objecthunter.exp4j.function.Functions$6",
      "net.objecthunter.exp4j.function.Functions$7",
      "net.objecthunter.exp4j.function.Functions$8",
      "net.objecthunter.exp4j.function.Functions$9",
      "net.objecthunter.exp4j.function.Functions$10",
      "net.objecthunter.exp4j.function.Functions$11",
      "net.objecthunter.exp4j.function.Functions$12",
      "net.objecthunter.exp4j.function.Functions$13",
      "net.objecthunter.exp4j.function.Functions$14",
      "net.objecthunter.exp4j.function.Functions$15",
      "net.objecthunter.exp4j.function.Functions$16",
      "net.objecthunter.exp4j.function.Functions$17",
      "net.objecthunter.exp4j.function.Functions$18",
      "net.objecthunter.exp4j.function.Functions$19",
      "net.objecthunter.exp4j.function.Functions$20",
      "net.objecthunter.exp4j.function.Functions$21",
      "net.objecthunter.exp4j.function.Functions$22",
      "net.objecthunter.exp4j.function.Functions$23",
      "net.objecthunter.exp4j.function.Functions",
      "net.objecthunter.exp4j.Expression",
      "net.objecthunter.exp4j.shuntingyard.ShuntingYard",
      "net.objecthunter.exp4j.tokenizer.Tokenizer",
      "net.objecthunter.exp4j.operator.Operator",
      "net.objecthunter.exp4j.operator.Operators$1",
      "net.objecthunter.exp4j.operator.Operators$2",
      "net.objecthunter.exp4j.operator.Operators$3",
      "net.objecthunter.exp4j.operator.Operators$4",
      "net.objecthunter.exp4j.operator.Operators$5",
      "net.objecthunter.exp4j.operator.Operators$6",
      "net.objecthunter.exp4j.operator.Operators$7",
      "net.objecthunter.exp4j.operator.Operators$8",
      "net.objecthunter.exp4j.operator.Operators",
      "net.objecthunter.exp4j.tokenizer.Token",
      "net.objecthunter.exp4j.tokenizer.OperatorToken",
      "net.objecthunter.exp4j.tokenizer.NumberToken",
      "net.objecthunter.exp4j.tokenizer.UnknownFunctionOrVariableException",
      "com.marketplace.vintage.utils.VintageDate",
      "com.marketplace.vintage.VintageConstants",
      "com.marketplace.vintage.carrier.PremiumParcelCarrier",
      "com.marketplace.vintage.order.OrderBuilder",
      "com.marketplace.vintage.order.Order",
      "com.marketplace.vintage.order.OrderStatus",
      "net.objecthunter.exp4j.ArrayStack",
      "net.objecthunter.exp4j.tokenizer.OpenParenthesesToken",
      "net.objecthunter.exp4j.tokenizer.ArgumentSeparatorToken",
      "net.objecthunter.exp4j.tokenizer.CloseParenthesesToken",
      "net.objecthunter.exp4j.ValidationResult",
      "net.objecthunter.exp4j.tokenizer.FunctionToken",
      "net.objecthunter.exp4j.tokenizer.VariableToken",
      "com.marketplace.vintage.item.ItemProperty",
      "com.marketplace.vintage.item.ItemType"
    );
  }
}
