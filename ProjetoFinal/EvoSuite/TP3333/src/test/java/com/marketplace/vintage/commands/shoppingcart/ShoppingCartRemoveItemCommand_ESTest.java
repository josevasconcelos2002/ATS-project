/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 20:56:41 GMT 2024
 */

package com.marketplace.vintage.commands.shoppingcart;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.marketplace.vintage.Vintage;
import com.marketplace.vintage.carrier.ParcelCarrierController;
import com.marketplace.vintage.carrier.ParcelCarrierManager;
import com.marketplace.vintage.commands.shoppingcart.ShoppingCartRemoveItemCommand;
import com.marketplace.vintage.expression.Exp4jExpressionSolver;
import com.marketplace.vintage.input.impl.BufferedInputPrompter;
import com.marketplace.vintage.input.impl.StdinInputPrompter;
import com.marketplace.vintage.item.ItemController;
import com.marketplace.vintage.item.ItemFactory;
import com.marketplace.vintage.item.ItemManager;
import com.marketplace.vintage.logging.JavaLogger;
import com.marketplace.vintage.logging.Logger;
import com.marketplace.vintage.order.OrderController;
import com.marketplace.vintage.order.OrderFactory;
import com.marketplace.vintage.order.OrderManager;
import com.marketplace.vintage.scripting.ScriptController;
import com.marketplace.vintage.time.TimeManager;
import com.marketplace.vintage.user.User;
import com.marketplace.vintage.user.UserController;
import com.marketplace.vintage.user.UserManager;
import com.marketplace.vintage.utils.VintageDate;
import com.marketplace.vintage.view.ViewFactory;
import com.marketplace.vintage.view.impl.UserView;
import java.util.Iterator;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ShoppingCartRemoveItemCommand_ESTest extends ShoppingCartRemoveItemCommand_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      JavaLogger javaLogger0 = new JavaLogger();
      LinkedList<String> linkedList0 = new LinkedList<String>();
      Iterator<String> iterator0 = linkedList0.iterator();
      BufferedInputPrompter bufferedInputPrompter0 = new BufferedInputPrompter(iterator0);
      ViewFactory viewFactory0 = new ViewFactory(javaLogger0, bufferedInputPrompter0, (Vintage) null);
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      User user0 = userController0.createUser("S{U9D=x\"sg", "S{U9D=x\"sg", "", "p'Sz'rFzG1'k=a", ";~*b[8#%BfVS\"pT");
      UserView userView0 = viewFactory0.createUserView(user0);
      ShoppingCartRemoveItemCommand shoppingCartRemoveItemCommand0 = new ShoppingCartRemoveItemCommand(userView0, (Vintage) null);
      String[] stringArray0 = new String[1];
      shoppingCartRemoveItemCommand0.executeSafely(javaLogger0, bufferedInputPrompter0, stringArray0);
      assertEquals("remove", shoppingCartRemoveItemCommand0.getName());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      JavaLogger javaLogger0 = new JavaLogger();
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      ViewFactory viewFactory0 = new ViewFactory(javaLogger0, stdinInputPrompter0, (Vintage) null);
      User user0 = new User("", "iAI1PO\"o@@", "That item isn't in your shopping cart.", "@V'V)ItYQ0Xa", "The user's username cannot contain spaces");
      UserView userView0 = viewFactory0.createUserView(user0);
      ShoppingCartRemoveItemCommand shoppingCartRemoveItemCommand0 = new ShoppingCartRemoveItemCommand(userView0, (Vintage) null);
      String[] stringArray0 = new String[0];
      // Undeclared exception!
      try { 
        shoppingCartRemoveItemCommand0.executeSafely(javaLogger0, stdinInputPrompter0, stringArray0);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 0
         //
         verifyException("com.marketplace.vintage.commands.shoppingcart.ShoppingCartRemoveItemCommand", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      User user0 = new User("ocZ", "ocZ", "ocZ", "ocZ", "ocZ");
      String[] stringArray0 = new String[2];
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      user0.addItemToShoppingCart((String) null);
      ItemManager itemManager0 = new ItemManager();
      ItemFactory itemFactory0 = new ItemFactory();
      ItemController itemController0 = new ItemController(itemManager0, itemFactory0);
      OrderManager orderManager0 = new OrderManager();
      OrderController orderController0 = new OrderController(orderManager0, (OrderFactory) null);
      TimeManager timeManager0 = new TimeManager((VintageDate) null);
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      Exp4jExpressionSolver exp4jExpressionSolver0 = new Exp4jExpressionSolver();
      UserManager userManager0 = new UserManager();
      UserController userController0 = new UserController(userManager0);
      ScriptController scriptController0 = new ScriptController();
      Vintage vintage0 = new Vintage(itemController0, orderController0, timeManager0, parcelCarrierController0, exp4jExpressionSolver0, userController0, scriptController0);
      UserView userView0 = new UserView((Logger) null, stdinInputPrompter0, vintage0, user0);
      ShoppingCartRemoveItemCommand shoppingCartRemoveItemCommand0 = new ShoppingCartRemoveItemCommand(userView0, vintage0);
      // Undeclared exception!
      try { 
        shoppingCartRemoveItemCommand0.executeSafely((Logger) null, stdinInputPrompter0, stringArray0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A user with the id 00000000-0100-4000-8200-000003000000 was not found
         //
         verifyException("com.marketplace.vintage.user.UserManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      User user0 = new User(">|kqoK#eXRy?&", ">|kqoK#eXRy?&", ">|kqoK#eXRy?&", ">|kqoK#eXRy?&", ">|kqoK#eXRy?&");
      String[] stringArray0 = new String[15];
      StdinInputPrompter stdinInputPrompter0 = new StdinInputPrompter();
      UserView userView0 = new UserView((Logger) null, stdinInputPrompter0, (Vintage) null, user0);
      ShoppingCartRemoveItemCommand shoppingCartRemoveItemCommand0 = new ShoppingCartRemoveItemCommand(userView0, (Vintage) null);
      // Undeclared exception!
      try { 
        shoppingCartRemoveItemCommand0.executeSafely((Logger) null, stdinInputPrompter0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.commands.shoppingcart.ShoppingCartRemoveItemCommand", e);
      }
  }
}
