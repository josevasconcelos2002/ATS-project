/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 21:00:34 GMT 2024
 */

package com.marketplace.vintage.input.impl;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.marketplace.vintage.input.impl.BufferedInputPrompter;
import java.util.Iterator;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BufferedInputPrompter_ESTest extends BufferedInputPrompter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true, true).when(iterator0).hasNext();
      doReturn("", " ").when(iterator0).next();
      BufferedInputPrompter bufferedInputPrompter0 = new BufferedInputPrompter(iterator0);
      String string0 = bufferedInputPrompter0.getInput();
      String string1 = bufferedInputPrompter0.getInput();
      assertFalse(string1.equals((Object)string0));
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(true).when(iterator0).hasNext();
      doReturn((Object) null).when(iterator0).next();
      BufferedInputPrompter bufferedInputPrompter0 = new BufferedInputPrompter(iterator0);
      String string0 = bufferedInputPrompter0.getInput();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      Iterator<String> iterator0 = (Iterator<String>) mock(Iterator.class, new ViolatedAssumptionAnswer());
      doReturn(false).when(iterator0).hasNext();
      BufferedInputPrompter bufferedInputPrompter0 = new BufferedInputPrompter(iterator0);
      // Undeclared exception!
      try { 
        bufferedInputPrompter0.getInput();
        fail("Expecting exception: IllegalStateException");
      
      } catch(IllegalStateException e) {
         //
         // No more input available
         //
         verifyException("com.marketplace.vintage.input.impl.BufferedInputPrompter", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BufferedInputPrompter bufferedInputPrompter0 = new BufferedInputPrompter((Iterator<String>) null);
      // Undeclared exception!
      try { 
        bufferedInputPrompter0.getInput();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.input.impl.BufferedInputPrompter", e);
      }
  }
}
