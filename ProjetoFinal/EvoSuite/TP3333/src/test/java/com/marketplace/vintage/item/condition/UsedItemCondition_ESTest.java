/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 21:02:47 GMT 2024
 */

package com.marketplace.vintage.item.condition;

import org.junit.Test;
import static org.junit.Assert.*;
import com.marketplace.vintage.item.condition.UsedItemCondition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UsedItemCondition_ESTest extends UsedItemCondition_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(0, 0);
      int int0 = usedItemCondition0.getNumberOfPreviousOwners();
      assertEquals(0, int0);
      assertEquals(0, usedItemCondition0.getConditionLevel());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(397, 397);
      int int0 = usedItemCondition0.getNumberOfPreviousOwners();
      assertEquals(397, int0);
      assertEquals(397, usedItemCondition0.getConditionLevel());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(1, 1221);
      int int0 = usedItemCondition0.getConditionLevel();
      assertEquals(1, int0);
      assertEquals(1221, usedItemCondition0.getNumberOfPreviousOwners());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition((-1), (-1));
      int int0 = usedItemCondition0.getConditionLevel();
      assertEquals((-1), int0);
      assertEquals((-1), usedItemCondition0.getNumberOfPreviousOwners());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(0, (-1));
      int int0 = usedItemCondition0.getConditionLevel();
      assertEquals(0, int0);
      assertEquals((-1), usedItemCondition0.getNumberOfPreviousOwners());
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(0, (-1));
      String string0 = usedItemCondition0.getDisplayString();
      assertEquals("Used (0/10, -1 previous owners)", string0);
  }

  @Test(timeout = 4000)
  public void test6()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition(0, (-1));
      int int0 = usedItemCondition0.getNumberOfPreviousOwners();
      assertEquals(0, usedItemCondition0.getConditionLevel());
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test7()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition((-1856), (-1856));
      usedItemCondition0.getType();
      assertEquals((-1856), usedItemCondition0.getNumberOfPreviousOwners());
      assertEquals((-1856), usedItemCondition0.getConditionLevel());
  }

  @Test(timeout = 4000)
  public void test8()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = new UsedItemCondition((-1856), (-1856));
      String string0 = usedItemCondition0.toString();
      assertEquals("Used (-1856/10, -1856 previous owners)", string0);
  }
}
