/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 21:07:33 GMT 2024
 */

package com.marketplace.vintage.carrier;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.marketplace.vintage.carrier.NormalParcelCarrier;
import com.marketplace.vintage.carrier.ParcelCarrier;
import com.marketplace.vintage.carrier.ParcelCarrierController;
import com.marketplace.vintage.carrier.ParcelCarrierManager;
import com.marketplace.vintage.carrier.PremiumParcelCarrier;
import com.marketplace.vintage.item.ItemType;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ParcelCarrierController_ESTest extends ParcelCarrierController_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("", "g'v*xW6");
      parcelCarrierManager0.registerParcelCarrier(premiumParcelCarrier0);
      parcelCarrierController0.setCarrierExpeditionPriceExpression(premiumParcelCarrier0, "g'v*xW6");
      assertEquals("", premiumParcelCarrier0.getName());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("m&ONUw%~0hhO$e=U", "m&ONUw%~0hhO$e=U");
      parcelCarrierManager0.registerParcelCarrier(premiumParcelCarrier0);
      parcelCarrierController0.addDeliveredOrderId(premiumParcelCarrier0, "X]_P-W|5&.s~!?{iN");
      assertEquals("m&ONUw%~0hhO$e=U", premiumParcelCarrier0.getName());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("m&ONUw%~0hhO$e=U", "m&ONUw%~0hhO$e=U");
      parcelCarrierManager0.registerParcelCarrier(premiumParcelCarrier0);
      ParcelCarrier parcelCarrier0 = parcelCarrierController0.getCarrierByName("m&ONUw%~0hhO$e=U");
      assertNotSame(parcelCarrier0, premiumParcelCarrier0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("", "g'v*xW6");
      parcelCarrierManager0.registerParcelCarrier(premiumParcelCarrier0);
      ItemType itemType0 = ItemType.MALA_PREMIUM;
      List<ParcelCarrier> list0 = parcelCarrierController0.getAllCompatibleWith(itemType0);
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      List<ParcelCarrier> list0 = parcelCarrierController0.getAll();
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("#!cdq(}S[C;!6", "#!cdq(}S[C;!6");
      parcelCarrierController0.registerParcelCarrier(normalParcelCarrier0);
      List<ParcelCarrier> list0 = parcelCarrierController0.getAll();
      assertEquals(1, list0.size());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("yuW[[Jg/b!h9GN", "yuW[[Jg/b!h9GN");
      parcelCarrierController0.registerParcelCarrier(normalParcelCarrier0);
      boolean boolean0 = parcelCarrierController0.containsCarrierByName("yuW[[Jg/b!h9GN");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      boolean boolean0 = parcelCarrierController0.containsCarrierByName("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("", "6]p%*");
      // Undeclared exception!
      try { 
        parcelCarrierController0.setCarrierExpeditionPriceExpression(normalParcelCarrier0, "");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A carrier with the name  was not found
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      NormalParcelCarrier normalParcelCarrier0 = new NormalParcelCarrier("o", "o");
      parcelCarrierManager0.registerParcelCarrier(normalParcelCarrier0);
      // Undeclared exception!
      try { 
        parcelCarrierController0.registerParcelCarrier(normalParcelCarrier0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A carrier with that name already exists
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

  /*
  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      // Undeclared exception!
      try { 
        parcelCarrierController0.registerParcelCarrier((ParcelCarrier) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

   */

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      // Undeclared exception!
      try { 
        parcelCarrierController0.getCarrierByName("HAS_LACES");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      ItemType itemType0 = ItemType.MALA_PREMIUM;
      // Undeclared exception!
      try { 
        parcelCarrierController0.getAllCompatibleWith(itemType0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      // Undeclared exception!
      try { 
        parcelCarrierController0.addDeliveredOrderId((ParcelCarrier) null, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      // Undeclared exception!
      try { 
        parcelCarrierController0.containsCarrierByName("DIMENSION_AREA");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      // Undeclared exception!
      try { 
        parcelCarrierController0.getCarrierByName((String) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A carrier with the name null was not found
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("", "");
      // Undeclared exception!
      try { 
        parcelCarrierController0.addDeliveredOrderId(premiumParcelCarrier0, "Mala");
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // A carrier with the name  was not found
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierManager", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      ParcelCarrierManager parcelCarrierManager0 = new ParcelCarrierManager();
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController(parcelCarrierManager0);
      ItemType itemType0 = ItemType.SAPATILHAS;
      List<ParcelCarrier> list0 = parcelCarrierController0.getAllCompatibleWith(itemType0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      PremiumParcelCarrier premiumParcelCarrier0 = new PremiumParcelCarrier("R?XC!s'CB", "R?XC!s'CB");
      // Undeclared exception!
      try { 
        parcelCarrierController0.setCarrierExpeditionPriceExpression(premiumParcelCarrier0, "L");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      ParcelCarrierController parcelCarrierController0 = new ParcelCarrierController((ParcelCarrierManager) null);
      // Undeclared exception!
      try { 
        parcelCarrierController0.getAll();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.marketplace.vintage.carrier.ParcelCarrierController", e);
      }
  }
}
