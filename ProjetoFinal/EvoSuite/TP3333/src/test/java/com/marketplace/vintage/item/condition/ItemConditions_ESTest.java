/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 20:52:16 GMT 2024
 */

package com.marketplace.vintage.item.condition;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.marketplace.vintage.item.condition.ItemConditions;
import com.marketplace.vintage.item.condition.UsedItemCondition;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ItemConditions_ESTest extends ItemConditions_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = (UsedItemCondition)ItemConditions.createUsed(10, 0);
      assertEquals(0, usedItemCondition0.getNumberOfPreviousOwners());
      assertEquals(10, usedItemCondition0.getConditionLevel());
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      UsedItemCondition usedItemCondition0 = (UsedItemCondition)ItemConditions.createUsed(1, 1);
      assertEquals(1, usedItemCondition0.getConditionLevel());
      assertEquals(1, usedItemCondition0.getNumberOfPreviousOwners());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      // Undeclared exception!
      try { 
        ItemConditions.createUsed(10, (-100));
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // numberOfPreviousOwners must be >= 0
         //
         verifyException("com.marketplace.vintage.item.condition.ItemConditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      // Undeclared exception!
      try { 
        ItemConditions.createUsed(3667, 3667);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // conditionLevel must be between 1 and 10
         //
         verifyException("com.marketplace.vintage.item.condition.ItemConditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try { 
        ItemConditions.createUsed(0, 957);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // conditionLevel must be between 1 and 10
         //
         verifyException("com.marketplace.vintage.item.condition.ItemConditions", e);
      }
  }

  @Test(timeout = 4000)
  public void test5()  throws Throwable  {
      ItemConditions itemConditions0 = new ItemConditions();
  }
}
