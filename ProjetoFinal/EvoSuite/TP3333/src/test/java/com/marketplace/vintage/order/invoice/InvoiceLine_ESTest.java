/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 21:06:51 GMT 2024
 */

package com.marketplace.vintage.order.invoice;

import org.junit.Test;
import static org.junit.Assert.*;
import com.marketplace.vintage.order.invoice.ParcelShipmentCostInvoiceLine;
import java.math.BigDecimal;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class InvoiceLine_ESTest extends InvoiceLine_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ParcelShipmentCostInvoiceLine parcelShipmentCostInvoiceLine0 = new ParcelShipmentCostInvoiceLine("SMALL", 0, (BigDecimal) null);
      BigDecimal bigDecimal0 = parcelShipmentCostInvoiceLine0.getPrice();
      assertNull(bigDecimal0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      BigDecimal bigDecimal0 = BigDecimal.ZERO;
      ParcelShipmentCostInvoiceLine parcelShipmentCostInvoiceLine0 = new ParcelShipmentCostInvoiceLine("NEW", 1, bigDecimal0);
      BigDecimal bigDecimal1 = parcelShipmentCostInvoiceLine0.getPrice();
      assertEquals((short)0, bigDecimal1.shortValue());
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(1757);
      ParcelShipmentCostInvoiceLine parcelShipmentCostInvoiceLine0 = new ParcelShipmentCostInvoiceLine("r(;R`FX;knz!", (-2568), bigDecimal0);
      BigDecimal bigDecimal1 = parcelShipmentCostInvoiceLine0.getPrice();
      assertEquals((byte) (-35), bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal((-250L));
      ParcelShipmentCostInvoiceLine parcelShipmentCostInvoiceLine0 = new ParcelShipmentCostInvoiceLine("", (-2801), bigDecimal0);
      BigDecimal bigDecimal1 = parcelShipmentCostInvoiceLine0.getPrice();
      assertEquals((byte)6, bigDecimal1.byteValue());
  }

  @Test(timeout = 4000)
  public void test4()  throws Throwable  {
      BigDecimal bigDecimal0 = new BigDecimal(0);
      ParcelShipmentCostInvoiceLine parcelShipmentCostInvoiceLine0 = new ParcelShipmentCostInvoiceLine("", 0, bigDecimal0);
      String string0 = parcelShipmentCostInvoiceLine0.getDisplayName();
      assertEquals(" Shipping Cost (0 items)", string0);
  }
}
