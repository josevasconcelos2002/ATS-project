/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 14:54:09 GMT 2024
 */

package View;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Artigo;
import Model.Encomenda;
import Model.Transportadoras;
import View.Apresentacao;
import java.time.LocalDate;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Apresentacao_ESTest extends Apresentacao_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      LinkedList<Encomenda> linkedList0 = new LinkedList<Encomenda>();
      apresentacao0.printEncomendas(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      LinkedList<Integer> linkedList0 = new LinkedList<Integer>();
      apresentacao0.printCarrinho(linkedList0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        apresentacao0.printTransportadoras((Map<String, Transportadoras>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        apresentacao0.printTop10((Map<String, Double>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        apresentacao0.printArtigos((List<Artigo>) null, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMenuEstatisticas();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMenuConsultas();
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      HashMap<String, Double> hashMap0 = new HashMap<String, Double>(0);
      apresentacao0.printTop10(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        apresentacao0.printCarrinho((List<Integer>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMainMenuLogOut();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.welcome();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.formulasTransportadora();
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      HashMap<String, Transportadoras> hashMap0 = new HashMap<String, Transportadoras>();
      apresentacao0.printTransportadoras(hashMap0);
      assertTrue(hashMap0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMenuArtigo();
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMessage("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMenuInicial();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMenuLogin();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printSair();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      // Undeclared exception!
      try { 
        apresentacao0.printEncomendas((List<Encomenda>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("View.Output", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      LinkedList<Artigo> linkedList0 = new LinkedList<Artigo>();
      Period period0 = Period.ofYears((-5278));
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.MIN;
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      apresentacao0.printArtigos(linkedList0, localDate0);
      assertEquals(0, linkedList0.size());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Apresentacao apresentacao0 = new Apresentacao();
      apresentacao0.printMenuEncomenda();
  }
}
