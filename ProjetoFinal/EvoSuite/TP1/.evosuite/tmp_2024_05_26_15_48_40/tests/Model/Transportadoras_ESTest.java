/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 14:52:16 GMT 2024
 */

package Model;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import Model.Transportadoras;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Transportadoras_ESTest extends Transportadoras_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", (-1.0), (-1.0), true, (-1.0));
      transportadoras0.setFormula(2953);
      Long long0 = new Long(0L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(2953, transportadoras0.getFormula());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras1.setFormula((-1862));
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals((-1862), transportadoras1.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setVolFaturacao((-1683.2561));
      Transportadoras transportadoras1 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals((-1683.2561), transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras();
      transportadoras1.setLucro(2399);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(2399.0, transportadoras1.getLucro(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      Double double0 = new Double((-208.0642));
      Double double1 = new Double(2298.70343865161);
      transportadoras1.altera(double0, double1, 0);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(2298.70343865161, transportadoras1.getImposto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Lucro: ", (-305.9772787), 0.0, false, (-337.17512));
      boolean boolean0 = transportadoras0.isPremium();
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-337.17512), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertEquals((-305.9772787), transportadoras0.getImposto(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      double double0 = transportadoras0.getVolFaturacao();
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 4114.39629257236, true, 0.0);
      Long long0 = Long.valueOf(5L);
      transportadoras0.calculaPrecoExpedicao(long0);
      double double0 = transportadoras0.getVolFaturacao();
      assertEquals(185147.8331657562, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras((String) null, 2786.930021517089, 2786.930021517089, false, (-1570.0));
      transportadoras0.getNome();
      assertEquals((-1570.0), transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(2786.930021517089, transportadoras0.getLucro(), 0.01);
      assertEquals(2786.930021517089, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 4114.39629257236, true, 0.0);
      transportadoras0.getNome();
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(4114.39629257236, transportadoras0.getLucro(), 0.01);
      assertTrue(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 1560.06252, 1560.06252, false, 2324.208589251997);
      double double0 = transportadoras0.getLucro();
      assertEquals(1560.06252, transportadoras0.getImposto(), 0.01);
      assertEquals(2324.208589251997, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1560.06252, double0, 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 1560.06252, 1560.06252, false, 2324.208589251997);
      transportadoras0.setLucro((-1.0));
      double double0 = transportadoras0.getLucro();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("v", 0.0, (-3408.72594696752), true, (-192.09709897));
      double double0 = transportadoras0.getImposto();
      assertEquals((-3408.72594696752), transportadoras0.getLucro(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertTrue(transportadoras0.isPremium());
      assertEquals((-192.09709897), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Lucro: ", (-305.9772787), 0.0, false, (-337.17512));
      double double0 = transportadoras0.getImposto();
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertEquals((-305.9772787), double0, 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-337.17512), transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Nome: ", 5329.0, 5329.0, true, 732.076);
      assertEquals(1, transportadoras0.getFormula());
      
      transportadoras0.setFormula(0);
      int int0 = transportadoras0.getFormula();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula((-1499));
      int int0 = transportadoras0.getFormula();
      assertEquals((-1499), int0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Double double0 = new Double(0.0);
      transportadoras0.altera(double0, double0, 30);
      transportadoras0.clone();
      assertEquals(30, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 4114.39629257236, true, 0.0);
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
      assertEquals(4114.39629257236, transportadoras0.getLucro(), 0.01);
      assertTrue(transportadoras1.isPremium());
      assertEquals(1, transportadoras1.getFormula());
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(4114.39629257236, transportadoras1.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", (-1.0), (-1.0), true, (-1.0));
      Transportadoras transportadoras1 = transportadoras0.clone();
      assertTrue(transportadoras1.isPremium());
      assertEquals((-1.0), transportadoras0.getImposto(), 0.01);
      assertEquals((-1.0), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1.0), transportadoras0.getLucro(), 0.01);
      assertTrue(transportadoras1.equals((Object)transportadoras0));
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("suOn1{h^G.-WOI", 369.9657945, 369.9657945, true, 369.9657945);
      assertEquals(1, transportadoras0.getFormula());
      
      transportadoras0.setFormula(0);
      transportadoras0.clone();
      assertEquals(0, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula((-1885));
      transportadoras0.clone();
      assertEquals((-1885), transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("# Formula: ", (-477.0), 1.0, false, 227.511);
      Long long0 = new Long(2593L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals((-21192.489), transportadoras0.getVolFaturacao(), 0.01);
      assertEquals((-21420.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras0.setNome((String) null);
      // Undeclared exception!
      try { 
        transportadoras0.equals(transportadoras1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      // Undeclared exception!
      try { 
        transportadoras0.calculaPrecoExpedicao((Long) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 1.0, 1.0, true, 1.0);
      // Undeclared exception!
      try { 
        transportadoras0.altera((Double) null, (Double) null, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Transportadoras transportadoras0 = null;
      try {
        transportadoras0 = new Transportadoras((Transportadoras) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Model.Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 0.0, 4114.39629257236, true, 0.0);
      boolean boolean0 = transportadoras0.isPremium();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(4114.39629257236, transportadoras0.getLucro(), 0.01);
      assertTrue(boolean0);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 1472.139251957729, 0.0, true, 0.0);
      double double0 = transportadoras0.getLucro();
      assertTrue(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.0, double0, 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(1472.139251957729, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", (-1.0), (-1.0), true, (-1.0));
      double double0 = transportadoras0.getVolFaturacao();
      assertTrue(transportadoras0.isPremium());
      assertEquals(1, transportadoras0.getFormula());
      assertEquals((-1.0), transportadoras0.getLucro(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals((-1.0), transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("Nome: ", 5329.0, 5329.0, true, 732.076);
      transportadoras0.getNome();
      assertEquals(5329.0, transportadoras0.getImposto(), 0.01);
      assertEquals(5329.0, transportadoras0.getLucro(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertTrue(transportadoras0.isPremium());
      assertEquals(732.076, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("", 1472.139251957729, 0.0, true, 0.0);
      double double0 = transportadoras0.getImposto();
      assertEquals(1, transportadoras0.getFormula());
      assertTrue(transportadoras0.isPremium());
      assertEquals(1472.139251957729, double0, 0.01);
      assertEquals(0.0, transportadoras0.getLucro(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      int int0 = transportadoras0.getFormula();
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, int0);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula(4);
      Long long0 = Long.valueOf((long) 4);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(4, transportadoras0.getFormula());
      assertEquals(31.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(357L);
      transportadoras0.setFormula(3);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(3, transportadoras0.getFormula());
      assertEquals(16.1, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setFormula(2);
      Long long0 = new Long(2);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(2, transportadoras0.getFormula());
      assertEquals(15.015, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(357L);
      Double double0 = new Double(0.0);
      transportadoras0.altera(double0, double0, (-881));
      double double1 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals((-881), transportadoras0.getFormula());
      assertEquals(0.0, double1, 0.01);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(1L);
      double double0 = transportadoras0.calculaPrecoExpedicao(long0);
      assertEquals(1.1700000000000002, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1.1700000000000002, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras();
      transportadoras1.setFormula(2399);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals(2399, transportadoras1.getFormula());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(357L);
      transportadoras0.calculaPrecoExpedicao(long0);
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras1.setVolFaturacao(0.0);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(5.8500000000000005, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertTrue(boolean0);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras1.isPremium());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras("", 793.21771049, 0.0, false, 0.0);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertEquals(1, transportadoras1.getFormula());
      assertFalse(boolean0);
      assertEquals(0.0, transportadoras1.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.0, transportadoras1.getLucro(), 0.01);
      assertFalse(transportadoras1.isPremium());
      assertEquals(793.21771049, transportadoras1.getImposto(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras("O", 7.568418026334721, 7.568418026334721, true, 7.568418026334721);
      Transportadoras transportadoras1 = new Transportadoras("Q", 7.568418026334721, 7.568418026334721, true, 7.568418026334721);
      boolean boolean0 = transportadoras0.equals(transportadoras1);
      assertTrue(transportadoras1.isPremium());
      assertEquals(7.568418026334721, transportadoras1.getLucro(), 0.01);
      assertEquals(7.568418026334721, transportadoras1.getImposto(), 0.01);
      assertEquals(1, transportadoras1.getFormula());
      assertFalse(boolean0);
      assertEquals(7.568418026334721, transportadoras1.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Long long0 = new Long(357L);
      boolean boolean0 = transportadoras0.equals(long0);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
      assertFalse(boolean0);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals((Object) null);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(boolean0);
      assertEquals(1, transportadoras0.getFormula());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertFalse(transportadoras0.isPremium());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      boolean boolean0 = transportadoras0.equals(transportadoras0);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertTrue(boolean0);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = new Transportadoras(transportadoras0);
      transportadoras0.setLucro((-551.2243168965));
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertEquals((-551.2243168965), transportadoras0.getLucro(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setImposto(32.43640976596623);
      assertEquals(32.43640976596623, transportadoras0.getImposto(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      String string0 = transportadoras0.toString();
      assertEquals("Nome: \nImposto: 0.3\nLucro: 0.1\nPremium: false\n# Formula: 1\n", string0);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.setPremium(false);
      assertEquals(0.0, transportadoras0.getVolFaturacao(), 0.01);
      assertFalse(transportadoras0.isPremium());
      assertEquals(0.1, transportadoras0.getLucro(), 0.01);
      assertEquals(0.3, transportadoras0.getImposto(), 0.01);
      assertEquals(1, transportadoras0.getFormula());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      transportadoras0.addVolFaturacao((-551.2243168965));
      assertEquals((-551.2243168965), transportadoras0.getVolFaturacao(), 0.01);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Transportadoras transportadoras0 = new Transportadoras();
      Transportadoras transportadoras1 = transportadoras0.clone();
      transportadoras1.setPremium(true);
      boolean boolean0 = transportadoras1.equals(transportadoras0);
      assertFalse(boolean0);
      assertTrue(transportadoras1.isPremium());
  }
}
