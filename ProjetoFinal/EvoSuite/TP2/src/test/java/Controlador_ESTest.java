/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 14:25:56 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.util.HashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import java.util.Scanner;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.evosuite.runtime.util.SystemInUtil;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Controlador_ESTest extends Controlador_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      boolean boolean0 = false;
      FileSystemHandling.setPermissions((EvoSuiteFile) null, false, false, false);
      Menu menu0 = new Menu();
      Vintage.carregarEstado();
      Controlador controlador0 = new Controlador(menu0, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.povoar();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      FileSystemHandling.shouldThrowIOException((EvoSuiteFile) null);
      SystemInUtil.addInputLine("spa>2{+zw");
      Menu menu0 = new Menu();
      menu0.clear();
      Controlador controlador0 = new Controlador(menu0, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.login();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Vintage.carregarEstado();
      Controlador controlador0 = new Controlador((Menu) null, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.parsing();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      SystemInUtil.addInputLine("-wSS7 /9;?Pd");
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_malas();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Menu menu0 = new Menu();
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      Controlador controlador0 = new Controlador();
      Controlador controlador1 = new Controlador(controlador0);
      controlador1.getMenu();
      FileSystemHandling.setPermissions(evoSuiteFile0, true, false, true);
      Vintage vintage0 = Vintage.load();
      Controlador controlador2 = new Controlador(menu0, vintage0);
      Controlador controlador3 = new Controlador(controlador2);
      // Undeclared exception!
      try { 
        controlador3.parsing();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Vintage.carregarEstado();
      Controlador controlador0 = new Controlador((Menu) null, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_sapatilhas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Vintage.carregarEstado();
      Controlador controlador0 = new Controlador((Menu) null, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.escolha_transportadora();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Controlador controlador0 = new Controlador((Menu) null, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.escolha_carrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Menu menu0 = new Menu();
      menu0.print_tirar_produtos_venda();
      Controlador controlador0 = new Controlador(menu0, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.salvarEstado();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Menu menu0 = new Menu();
      Controlador controlador0 = new Controlador(menu0, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.inicio_controlador();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_sapatilhas();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      controlador0.salvarEstado();
      controlador0.getVintage();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_tipo();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      Controlador controlador1 = new Controlador(controlador0);
      // Undeclared exception!
      try { 
        controlador1.adicionar_artigo_carrinho();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_carrinho();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.registar();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      Controlador controlador1 = new Controlador(controlador0);
      // Undeclared exception!
      try { 
        controlador1.registar();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.inicio_controlador();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      controlador0.salvarEstado();
      // Undeclared exception!
      try { 
        controlador0.escolha_pesquica();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      Controlador controlador1 = new Controlador(controlador0);
      // Undeclared exception!
      try { 
        controlador1.escolha_pesquica();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_malas();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      Controlador controlador1 = new Controlador(controlador0);
      // Undeclared exception!
      try { 
        controlador1.escolha_malas();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_tipo();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Controlador controlador0 = null;
      try {
        controlador0 = new Controlador((Controlador) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Controlador", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_tshirt();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Menu menu0 = new Menu();
      Vintage vintage0 = Vintage.load();
      Controlador controlador0 = new Controlador(menu0, vintage0);
      // Undeclared exception!
      try { 
        controlador0.menu_venda_retirar_artigo();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.parsing();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_query();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_transportadora();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Menu menu0 = new Menu();
      Vintage vintage0 = Vintage.load();
      Controlador controlador0 = new Controlador(menu0, vintage0);
      Controlador controlador1 = new Controlador(controlador0);
      // Undeclared exception!
      try { 
        controlador1.parsing();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // No line found
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      Controlador controlador1 = new Controlador(controlador0);
      // Undeclared exception!
      try { 
        controlador1.escolha_faturas();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Menu menu0 = new Menu();
      byte[] byteArray0 = new byte[7];
      byteArray0[0] = (byte)0;
      byteArray0[1] = (byte)0;
      byteArray0[2] = (byte) (-44);
      byteArray0[3] = (byte)0;
      byteArray0[4] = (byte)0;
      byteArray0[5] = (byte) (-7);
      byteArray0[6] = (byte) (-6);
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      Scanner scanner0 = new Scanner(byteArrayInputStream0);
      menu0.scanner = scanner0;
      Vintage vintage0 = Vintage.load();
      Controlador controlador0 = new Controlador(menu0, vintage0);
      menu0.vendedor_n_encontrado();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Menu menu0 = new Menu();
      Vintage.carregarEstado();
      Controlador controlador0 = new Controlador(menu0, (Vintage) null);
      // Undeclared exception!
      try { 
        controlador0.escolha_venda();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      controlador0.povoar();
      controlador0.salvarEstado();
      // Undeclared exception!
      try { 
        controlador0.escolha_transportadora();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Menu menu0 = new Menu();
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Map<String, Long> map0 = gestor_Utilizadores0.getIdUtilizadores();
      Gestor_Utilizadores gestor_Utilizadores1 = new Gestor_Utilizadores(hashMap1, hashMap2, map0);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      GestorEncomendas gestorEncomendas1 = new GestorEncomendas(gestorEncomendas0);
      Map<Long, Encomenda> map1 = gestorEncomendas1.getEncomendas();
      GestorEncomendas gestorEncomendas2 = new GestorEncomendas(map1);
      HashMap<Long, Transportadora> hashMap3 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap3);
      Object object0 = new Object();
      hashMap2.remove(object0);
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores1, gestorEncomendas2, gestor_Transportadoras0, menu0, 0);
      Controlador controlador0 = new Controlador(menu0, vintage0);
      // Undeclared exception!
      try { 
        controlador0.login();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_tshit();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_sapatilhas();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_tipo();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_malas();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      controlador0.getVintage();
      // Undeclared exception!
      try { 
        controlador0.login();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      // Undeclared exception!
      try { 
        controlador0.adicionar_artigo_carrinho();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Menu menu0 = new Menu();
      Vintage vintage0 = Vintage.load();
      Controlador controlador0 = new Controlador(menu0, vintage0);
      // Undeclared exception!
      try { 
        controlador0.escolha_sapatilhas();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Scanner", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      controlador0.salvarEstado();
      // Undeclared exception!
      try { 
        controlador0.escolha_venda_tshirt();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Controlador controlador0 = new Controlador();
      Controlador controlador1 = new Controlador(controlador0);
      // Undeclared exception!
      try { 
        controlador1.escolha_venda_malas();
        fail("Expecting exception: StackOverflowError");
      
      } catch(StackOverflowError e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }
}
