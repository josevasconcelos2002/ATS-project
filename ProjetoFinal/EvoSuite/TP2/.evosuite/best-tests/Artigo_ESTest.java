/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 14:33:28 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.MockOffsetDateTime;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Artigo_ESTest extends Artigo_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setTransportadora(1L);
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
      assertEquals(1L, mala1.getIdTransportadora());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setVendedor((-2284L));
      boolean boolean0 = mala1.equals(mala0);
      assertEquals((-2284L), mala1.getIdVendedor());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setN_utilizadores((-2411));
      boolean boolean0 = mala1.equals(mala0);
      assertEquals((-2411), mala1.getN_utilizadores());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setEstado_uso((-1431655765));
      boolean boolean0 = mala1.equals(mala0);
      assertEquals((-1431655765), mala1.getEstado_uso());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala0.setPreco_base(2.0);
      boolean boolean0 = mala0.equals(mala1);
      assertEquals(2.0, mala0.getPreco_base(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Double double0 = new Double(2244.0);
      Long long0 = new Long((-4729));
      Sapatilha sapatilha0 = new Sapatilha("A11N", "A11N", double0, false, (-4729), (-4729), long0, long0, (-4729), false, " C\u00F3digo de barras: ", (-4654), false, 2419.9753875612);
      Mala mala0 = new Mala("A11N", " C\u00F3digo de barras: ", double0, true, 10, (-4729), (Long) 3L, (Long) sapatilha0.contador, (-4654), "A", (-4654), false, (-4729));
      String string0 = mala0.toString();
      assertEquals(3L, Artigo.contador);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A2 Descri\u00E7\u00E3o: A11N Marca:  C\u00F3digo de barras:  Pre\u00E7o base: 2244.0 Novo: true Estado de uso: 10 N\u00FAmero de utilizadores: -4729 Disponivel: true Id da transportadora: 3 Id do vendedor: 2 } Dimens\u00E3o: -4654 Material: A Ano da Cole\u00E7\u00E3o: -4654 Premium: false Valoriza\u00E7\u00E3o: -4729.0}", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      LocalDate localDate0 = tshirt0.getData_venda();
      Padrao padrao0 = Padrao.liso;
      tshirt0.setPadrao(padrao0);
      double double0 = tshirt0.preco_atual(localDate0);
      assertFalse(tshirt0.getDisponivel());
      assertEquals("Artigo invalido", tshirt0.getDescricao());
      assertEquals("Artigo invalido", tshirt0.getMarca());
      assertEquals((-1), tshirt0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), tshirt0.getIdVendedor());
      assertEquals(0.0, double0, 0.01);
      assertEquals((-1L), tshirt0.getIdTransportadora());
      assertEquals((-1), tshirt0.getEstado_uso());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      LocalDate localDate0 = MockLocalDate.now();
      double double0 = sapatilha0.preco_atual(localDate0);
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertFalse(sapatilha0.getNovo());
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertEquals(0.01, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      tshirt0.setPreco_base((-1582.1));
      Padrao padrao0 = Padrao.liso;
      tshirt0.setPadrao(padrao0);
      double double0 = tshirt0.preco_atual((LocalDate) null);
      assertEquals((-1582.1), tshirt0.getPreco_base(), 0.01);
      assertEquals((-1582.1), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Mala mala0 = new Mala();
      double double0 = mala0.getPreco_base();
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getDisponivel());
      assertFalse(mala0.getNovo());
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
      
      tshirt0.setPreco_base((-1.0));
      double double0 = tshirt0.getPreco_base();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Long long0 = new Long(0);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("", "@FZKjHY$}f<^$$", (-173.378), false, 0, 0, long0, long0, tamanho0, padrao0);
      boolean boolean0 = tshirt0.getNovo();
      assertEquals("@FZKjHY$}f<^$$", tshirt0.getMarca());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals("", tshirt0.getDescricao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals((-173.378), tshirt0.getPreco_base(), 0.01);
      assertEquals(0, tshirt0.getN_utilizadores());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Long long0 = new Long(0L);
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("zm{Iv%`", "zm{Iv%`", (-3272.45929901299), true, (-340), 0, long0, long0, tamanho0, padrao0);
      int int0 = tshirt0.getN_utilizadores();
      assertEquals("zm{Iv%`", tshirt0.getDescricao());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("zm{Iv%`", tshirt0.getMarca());
      assertEquals(0, int0);
      assertTrue(tshirt0.getNovo());
      assertEquals((-340), tshirt0.getEstado_uso());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals((-3272.45929901299), tshirt0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Mala mala0 = new Mala();
      int int0 = mala0.getN_utilizadores();
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertFalse(mala0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), int0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Long long0 = new Long((-1554L));
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      Tshirt tshirt0 = new Tshirt("/W]q@_n|\"+-P`", (String) null, 1426.178, false, 0, 0, long0, long0, tamanho0, padrao0);
      String string0 = tshirt0.getMarca();
      assertFalse(tshirt0.getNovo());
      assertEquals(0, tshirt0.getEstado_uso());
      assertNull(string0);
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertEquals(1426.178, tshirt0.getPreco_base(), 0.01);
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("/W]q@_n|\"+-P`", tshirt0.getDescricao());
      assertTrue(tshirt0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Long long0 = new Long(0);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("", "@FZKjHY$}f<^$$", (-173.378), false, 0, 0, long0, long0, tamanho0, padrao0);
      String string0 = tshirt0.getMarca();
      assertEquals(0, tshirt0.getEstado_uso());
      assertFalse(tshirt0.getNovo());
      assertEquals("@FZKjHY$}f<^$$", string0);
      assertEquals(0, tshirt0.getN_utilizadores());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals((-173.378), tshirt0.getPreco_base(), 0.01);
      assertEquals("", tshirt0.getDescricao());
      assertEquals("A1", tshirt0.getCodigo_barras());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Double double0 = new Double((-585.8252796427));
      Long long0 = Long.getLong("", (long) 0);
      Sapatilha sapatilha0 = new Sapatilha("5/)]1(UIK", "5/)]1(UIK", double0, true, 0, 0, long0, long0, 0, true, "fw5EBC5/>^bj", 0, true, (-585.8252796427));
      long long1 = sapatilha0.getIdVendedor();
      assertEquals(0, sapatilha0.getEstado_uso());
      assertEquals((-585.8252796427), sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals("5/)]1(UIK", sapatilha0.getMarca());
      assertEquals("5/)]1(UIK", sapatilha0.getDescricao());
      assertTrue(sapatilha0.getNovo());
      assertEquals(0, sapatilha0.getN_utilizadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(0L, long1);
      assertTrue(sapatilha0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long(1565);
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, false, 1565, 1565, long0, long0, (-567), false, "", (-567), false, 1565);
      long long1 = sapatilha0.getIdVendedor();
      assertEquals(1565, sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("", sapatilha0.getMarca());
      assertEquals("", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(1565L, long1);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(2L, Artigo.contador);
      assertEquals(1565, sapatilha0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Mala mala0 = new Mala();
      Double double0 = new Double(10);
      Sapatilha sapatilha0 = new Sapatilha("YJA4Y,;{f-", "YJA4Y,;{f-", double0, true, 10, 45, (Long) mala0.contador, (Long) mala0.contador, 45, true, "Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: Artigo invalido Marca: Artigo invalido Pre\u00E7o base: 0.0 Novo: false Estado de uso: -1 N\u00FAmero de utilizadores: -1 Disponivel: false Id da transportadora: -1 Id do vendedor: -1 } Dimens\u00E3o: 0 Material:  Ano da Cole\u00E7\u00E3o: 0 Premium: false Valoriza\u00E7\u00E3o: 0.0} Pre\u00E7o atual: \uFFFD\u20AC \n", 10, true, 2L);
      long long0 = sapatilha0.getIdTransportadora();
      assertEquals(3L, Artigo.contador);
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Mala mala0 = new Mala();
      long long0 = mala0.getIdTransportadora();
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), long0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Double double0 = new Double(1.0);
      Sapatilha sapatilha0 = new Sapatilha("A", "A", double0, true, 1, 1, (Long) 3L, (Long) 3L, 10, true, "A", 3156, false, 1793L);
      int int0 = sapatilha0.getEstado_uso();
      assertEquals(2L, Artigo.contador);
      assertEquals(1, int0);
      assertEquals(1.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals(1, sapatilha0.getN_utilizadores());
      assertTrue(sapatilha0.getNovo());
      assertTrue(sapatilha0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Mala mala0 = new Mala();
      int int0 = mala0.getEstado_uso();
      assertEquals((-1), int0);
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals("Artigo invalido", mala0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Mala mala0 = new Mala();
      boolean boolean0 = mala0.getDisponivel();
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), mala0.getEstado_uso());
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(boolean0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Long long0 = new Long(710);
      Tamanho tamanho0 = Tamanho.L;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt((String) null, "Sapatilhas:: {", (-1765.9), false, 710, 710, long0, long0, tamanho0, padrao0);
      String string0 = tshirt0.getDescricao();
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals("Sapatilhas:: {", tshirt0.getMarca());
      assertTrue(tshirt0.getDisponivel());
      assertFalse(tshirt0.getNovo());
      assertEquals(2L, Artigo.contador);
      assertEquals(710, tshirt0.getN_utilizadores());
      assertEquals((-1765.9), tshirt0.getPreco_base(), 0.01);
      assertNull(string0);
      assertEquals(710, tshirt0.getEstado_uso());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Mala mala0 = new Mala();
      String string0 = mala0.getDescricao();
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals("Artigo invalido", string0);
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(mala0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Mala mala0 = new Mala();
      assertEquals("", mala0.getCodigo());
      
      long long0 = Artigo.getContador();
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Artigo.codigo = "A";
      Artigo.codigo = "";
      String string0 = Artigo.getCodigo();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.equals(mala0);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertFalse(mala0.getNovo());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertFalse(mala0.getDisponivel());
      assertEquals((-1), mala0.getEstado_uso());
      assertEquals("Artigo invalido", mala0.getDescricao());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals("Artigo invalido", mala0.getMarca());
      assertEquals((-1), mala0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Mala mala0 = new Mala();
      Artigo artigo0 = mala0.clone();
      assertFalse(artigo0.getNovo());
      assertEquals((-1), mala0.getEstado_uso());
      assertTrue(artigo0.equals((Object)mala0));
      assertEquals(2L, Artigo.contador);
      assertEquals("A1", artigo0.getCodigo_barras());
      assertEquals((-1L), mala0.getIdVendedor());
      assertEquals((-1L), mala0.getIdTransportadora());
      assertEquals((-1), mala0.getN_utilizadores());
      assertFalse(artigo0.getDisponivel());
      assertEquals(0.0, mala0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Long long0 = new Long((-485L));
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt(" Data da Cole\u00E7\u00E3o: ", "liso", (-1517.025), true, (-3647), (-3647), long0, long0, tamanho0, padrao0);
      assertEquals(2L, Artigo.contador);
      
      Artigo.contador = 0L;
      tshirt0.clone();
      assertEquals((-1517.025), tshirt0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Long long0 = new Long(0);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("", "@FZKjHY$}f<^$$", (-173.378), false, 0, 0, long0, long0, tamanho0, padrao0);
      Artigo artigo0 = tshirt0.clone();
      assertEquals("A1", artigo0.getCodigo_barras());
      assertEquals(0L, artigo0.getIdVendedor());
      assertEquals(0L, artigo0.getIdTransportadora());
      assertEquals(0, artigo0.getN_utilizadores());
      assertEquals("", artigo0.getDescricao());
      assertTrue(artigo0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals((-173.378), artigo0.getPreco_base(), 0.01);
      assertEquals("@FZKjHY$}f<^$$", artigo0.getMarca());
      assertFalse(artigo0.getNovo());
      assertEquals(0, artigo0.getEstado_uso());
      assertEquals((-173.378), tshirt0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.riscas;
      Tshirt tshirt0 = new Tshirt("WNPz", "M", 1.0, true, 1, 1, (Long) sapatilha0.contador, (Long) 3L, tamanho0, padrao0);
      assertEquals(3L, Artigo.contador);
      
      Artigo.contador = (-331L);
      tshirt0.clone();
      assertEquals(1, tshirt0.getEstado_uso());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      // Undeclared exception!
      try { 
        tshirt0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      LocalDate localDate0 = tshirt0.getData_venda();
      // Undeclared exception!
      try { 
        tshirt0.preco_atual(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Sapatilha sapatilha0 = new Sapatilha();
      LocalDate localDate0 = sapatilha0.getData_venda();
      // Undeclared exception!
      try { 
        tshirt0.mostrar(localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Long long0 = new Long(0);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("", "@FZKjHY$}f<^$$", (-173.378), false, 0, 0, long0, long0, tamanho0, padrao0);
      long long1 = tshirt0.getIdTransportadora();
      assertEquals("", tshirt0.getDescricao());
      assertTrue(tshirt0.getDisponivel());
      assertEquals(2L, Artigo.contador);
      assertEquals("@FZKjHY$}f<^$$", tshirt0.getMarca());
      assertEquals((-173.378), tshirt0.getPreco_base(), 0.01);
      assertEquals(0L, long1);
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertFalse(tshirt0.getNovo());
      assertEquals(0, tshirt0.getEstado_uso());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Double double0 = new Double((-4229.55813375));
      Long long0 = new Long((-3759));
      Mala mala0 = new Mala(" C\u00F3digo de barras: ", " C\u00F3digo de barras: ", double0, false, (-3759), (-3759), long0, long0, 1, "", 0, true, 0);
      long long1 = mala0.getIdVendedor();
      assertEquals((-4229.55813375), mala0.getPreco_base(), 0.01);
      assertEquals((-3759), mala0.getEstado_uso());
      assertEquals((-3759L), long1);
      assertFalse(mala0.getNovo());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(" C\u00F3digo de barras: ", mala0.getMarca());
      assertEquals(2L, Artigo.contador);
      assertEquals((-3759), mala0.getN_utilizadores());
      assertEquals(" C\u00F3digo de barras: ", mala0.getDescricao());
      assertTrue(mala0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Double double0 = new Double((-2610.69));
      Long long0 = new Long((-3323L));
      Mala mala0 = new Mala("", "", double0, false, 4, 10, long0, long0, 10, "A2", 3, false, (-2781.1853F));
      String string0 = mala0.getMarca();
      assertEquals((-2610.69), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertFalse(mala0.getNovo());
      assertEquals(4, mala0.getEstado_uso());
      assertEquals(10, mala0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.getDisponivel());
      assertEquals("", string0);
      assertEquals("", mala0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Sapatilha sapatilha0 = new Sapatilha();
      String string0 = sapatilha0.getCodigo_barras();
      assertEquals((-1L), sapatilha0.getIdVendedor());
      assertEquals((-1), sapatilha0.getN_utilizadores());
      assertEquals("Artigo invalido", sapatilha0.getMarca());
      assertEquals((-1L), sapatilha0.getIdTransportadora());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals((-1), sapatilha0.getEstado_uso());
      assertFalse(sapatilha0.getNovo());
      assertEquals("Artigo invalido", sapatilha0.getDescricao());
      assertFalse(sapatilha0.getDisponivel());
      assertEquals("A1", string0);
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Double double0 = new Double(0.0);
      Long long0 = new Long((-1L));
      Sapatilha sapatilha0 = new Sapatilha("$VALUES", "$VALUES", double0, false, 1208, 1208, long0, long0, 1208, true, "$VALUES", 0, false, 0.01);
      int int0 = sapatilha0.getN_utilizadores();
      assertEquals(2L, Artigo.contador);
      assertEquals(1208, int0);
      assertEquals(1208, sapatilha0.getEstado_uso());
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("$VALUES", sapatilha0.getMarca());
      assertEquals("$VALUES", sapatilha0.getDescricao());
      assertEquals(0.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertFalse(sapatilha0.getNovo());
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Double double0 = new Double((-495.64496099));
      Long long0 = new Long(1L);
      Mala mala0 = new Mala("", "", double0, true, 0, (-3889), long0, long0, (-3889), "", 1, false, (-3889));
      int int0 = mala0.getEstado_uso();
      assertEquals((-495.64496099), mala0.getPreco_base(), 0.01);
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals("", mala0.getDescricao());
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.getDisponivel());
      assertEquals(0, int0);
      assertEquals((-3889), mala0.getN_utilizadores());
      assertTrue(mala0.getNovo());
      assertEquals("", mala0.getMarca());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      String string0 = Artigo.criaCodigo();
      assertEquals("A1", string0);
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Long long0 = new Long(0);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      Tshirt tshirt0 = new Tshirt("", "@FZKjHY$}f<^$$", (-173.378), false, 0, 0, long0, long0, tamanho0, padrao0);
      String string0 = tshirt0.getDescricao();
      assertEquals("@FZKjHY$}f<^$$", tshirt0.getMarca());
      assertFalse(tshirt0.getNovo());
      assertEquals("A1", tshirt0.getCodigo_barras());
      assertEquals(0, tshirt0.getEstado_uso());
      assertEquals("", string0);
      assertEquals(0, tshirt0.getN_utilizadores());
      assertEquals(2L, Artigo.contador);
      assertEquals((-173.378), tshirt0.getPreco_base(), 0.01);
      assertTrue(tshirt0.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Double double0 = new Double(10.0);
      Long long0 = new Long(4552);
      Sapatilha sapatilha0 = new Sapatilha("", "", double0, true, (-114), 4552, long0, long0, (-114), true, "Tamanho", 3904, true, 4552);
      boolean boolean0 = sapatilha0.getDisponivel();
      assertEquals((-114), sapatilha0.getEstado_uso());
      assertTrue(boolean0);
      assertEquals(10.0, sapatilha0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertEquals(4552, sapatilha0.getN_utilizadores());
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertTrue(sapatilha0.getNovo());
      assertEquals("", sapatilha0.getMarca());
      assertEquals("", sapatilha0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Double double0 = new Double(777.2399696565179);
      Long long0 = new Long(162);
      Mala mala0 = new Mala(":", ":", double0, true, 162, 616, long0, long0, 162, ":", 1, true, 3398.0F);
      boolean boolean0 = mala0.getNovo();
      assertTrue(boolean0);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.getDisponivel());
      assertEquals(162, mala0.getEstado_uso());
      assertEquals(":", mala0.getMarca());
      assertEquals(616, mala0.getN_utilizadores());
      assertEquals("A1", mala0.getCodigo_barras());
      assertEquals(777.2399696565179, mala0.getPreco_base(), 0.01);
      assertEquals(":", mala0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Double double0 = new Double(2244.0);
      Long long0 = new Long((-4729));
      Sapatilha sapatilha0 = new Sapatilha("A11N", "A11N", double0, false, (-4729), (-4729), long0, long0, (-4729), false, " C\u00F3digo de barras: ", (-4654), false, 2419.9753875612);
      double double1 = sapatilha0.getPreco_base();
      assertEquals("A1", sapatilha0.getCodigo_barras());
      assertEquals("A11N", sapatilha0.getDescricao());
      assertEquals(2L, Artigo.contador);
      assertTrue(sapatilha0.getDisponivel());
      assertEquals("A11N", sapatilha0.getMarca());
      assertEquals((-4729), sapatilha0.getEstado_uso());
      assertEquals(2244.0, double1, 0.01);
      assertFalse(sapatilha0.getNovo());
      assertEquals((-4729), sapatilha0.getN_utilizadores());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1306), 2);
      tshirt0.setData_venda(localDate0);
      // Undeclared exception!
      try { 
        tshirt0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      assertTrue(mala1.equals((Object)mala0));
      
      OffsetDateTime offsetDateTime0 = MockOffsetDateTime.now();
      LocalDate localDate0 = MockLocalDate.from(offsetDateTime0);
      mala0.setData_venda(localDate0);
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setDisponivel(true);
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
      assertTrue(mala1.getDisponivel());
  }

  @Test(timeout = 4000)
  public void test49()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      assertEquals((-1L), mala0.getIdTransportadora());
      
      mala0.setTransportadora(2L);
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test50()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      assertEquals((-1L), mala1.getIdVendedor());
      
      mala1.setVendedor(2L);
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test51()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setN_utilizadores(1292);
      boolean boolean0 = mala1.equals(mala0);
      assertEquals(1292, mala1.getN_utilizadores());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test52()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setEstado_uso(5);
      boolean boolean0 = mala1.equals(mala0);
      assertEquals(5, mala1.getEstado_uso());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test53()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala1.setNovo(true);
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
      assertTrue(mala1.getNovo());
  }

  @Test(timeout = 4000)
  public void test54()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      mala0.setPreco_base(2L);
      boolean boolean0 = mala1.equals(mala0);
      assertEquals(2.0, mala0.getPreco_base(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test55()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setMarca("*JS;RY8myD]j0a{");
      Mala mala1 = new Mala(mala0);
      boolean boolean0 = mala0.equals(mala1);
      assertEquals("*JS;RY8myD]j0a{", mala0.getMarca());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test56()  throws Throwable  {
      Double double0 = new Double(2);
      Mala mala0 = new Mala("A", "A", double0, true, 2, 2, (Long) 3L, (Long) 3L, 2, "A", 0, true, 2);
      Mala mala1 = new Mala();
      mala0.equals(mala1);
      assertEquals(3L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test57()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt(tshirt0);
      // Undeclared exception!
      try { 
        tshirt1.equals(tshirt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test58()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      Tshirt tshirt1 = new Tshirt(tshirt0);
      tshirt1.setMarca("A");
      // Undeclared exception!
      try { 
        tshirt1.equals(tshirt0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Tshirt", e);
      }
  }

  @Test(timeout = 4000)
  public void test59()  throws Throwable  {
      Tshirt tshirt0 = new Tshirt();
      assertEquals("A1", tshirt0.getCodigo_barras());
      
      tshirt0.setCodigo_barras("A");
      assertEquals(0.0, tshirt0.getPreco_base(), 0.01);
  }

  @Test(timeout = 4000)
  public void test60()  throws Throwable  {
      String string0 = Artigo.getCodigo();
      assertEquals("A", string0);
  }

  @Test(timeout = 4000)
  public void test61()  throws Throwable  {
      Artigo.setContador(899L);
  }

  @Test(timeout = 4000)
  public void test62()  throws Throwable  {
      Double double0 = new Double(2);
      Mala mala0 = new Mala("A", "A", double0, true, 2, 2, (Long) 3L, (Long) 3L, 2, "A", 0, true, 2);
      mala0.setPreco_atual(4L);
      assertTrue(mala0.getNovo());
      assertEquals(2, mala0.getN_utilizadores());
      assertEquals(2.0, mala0.getPreco_base(), 0.01);
      assertEquals(2L, Artigo.contador);
      assertTrue(mala0.getDisponivel());
      assertEquals(2, mala0.getEstado_uso());
      assertEquals("A1", mala0.getCodigo_barras());
  }

  @Test(timeout = 4000)
  public void test63()  throws Throwable  {
      Mala mala0 = new Mala();
      mala0.setDescricao("N;J,Bg>,=qT+f=%");
      assertEquals("N;J,Bg>,=qT+f=%", mala0.getDescricao());
  }

  @Test(timeout = 4000)
  public void test64()  throws Throwable  {
      Artigo.setCodigo("A");
  }

  @Test(timeout = 4000)
  public void test65()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.ofYearDay((-1306), 2);
      Double double0 = new Double(2);
      Mala mala0 = new Mala("A", "A", double0, true, 2, 2, (Long) 3L, (Long) 3L, 2, "A", 0, true, 2);
      String string0 = mala0.mostrar(localDate0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A1 Descri\u00E7\u00E3o: A Marca: A Pre\u00E7o base: 2.0 Novo: true Estado de uso: 2 N\u00FAmero de utilizadores: 2 Disponivel: true Id da transportadora: 3 Id do vendedor: 3 } Dimens\u00E3o: 2 Material: A Ano da Cole\u00E7\u00E3o: 0 Premium: true Valoriza\u00E7\u00E3o: 2.0} Pre\u00E7o atual: 2.00\u20AC \n", string0);
      assertEquals(2L, Artigo.contador);
  }

  @Test(timeout = 4000)
  public void test66()  throws Throwable  {
      Mala mala0 = new Mala();
      Mala mala1 = new Mala(mala0);
      assertEquals("Artigo invalido", mala1.getDescricao());
      
      mala1.setDescricao("N;J,Bg>,=qT+f=%");
      boolean boolean0 = mala1.equals(mala0);
      assertFalse(boolean0);
  }
}
