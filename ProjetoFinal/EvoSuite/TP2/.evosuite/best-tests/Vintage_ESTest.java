/*
 * This file was automatically generated by EvoSuite
 * Sun May 26 14:29:18 GMT 2024
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.IOException;
import java.time.Clock;
import java.time.LocalDate;
import java.time.Month;
import java.time.Period;
import java.time.ZoneId;
import java.time.ZoneOffset;
import java.time.chrono.IsoChronology;
import java.util.HashMap;
import java.util.Map;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockClock;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.evosuite.runtime.mock.java.time.chrono.MockIsoChronology;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Vintage_ESTest extends Vintage_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test000()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = vintage0.getData();
      Tamanho tamanho0 = Tamanho.M;
      Padrao padrao0 = Padrao.riscas;
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderTshit(0L, localDate0, "", "~", 0.9, true, (-336), 0, (-38L), tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test001()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.now();
      Long long0 = new Long((-718L));
      // Undeclared exception!
      try { 
        vintage0.ColocarvenderSapatilha(1024L, localDate0, (String) null, ".Prt +", 0.0, false, 0, 0, long0, 0L, 0, false, "dQ8~,pSgLb!", 3955, false, 1160.0808139170274);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test002()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Period period0 = Period.ofWeeks(1058);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      // Undeclared exception!
      try { 
        vintage0.ColocarvenderSapatilha(0L, localDate0, "", "Vans", 0, false, 1058, 0, (Long) null, (-2745L), 22, false, "", (-1182), true, 0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test003()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Period period0 = Period.ofWeeks(1058);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneId zoneId0 = ZoneId.systemDefault();
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, zoneId0);
      vintage0.maiorVendedor(0, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test004()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.adicionaUtilizador((String) null, (String) null, "", 1449, (String) null);
      LocalDate localDate0 = vintage0.getData();
      String string0 = vintage0.maiorVendedor(1413, localDate0, (LocalDate) null);
      assertEquals("null vendeu 0 artigos\n", string0);
  }

  @Test(timeout = 4000)
  public void test005()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = vintage0.getData();
      vintage0.compradorMaior(0, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test006()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Boolean boolean0 = Boolean.FALSE;
      // Undeclared exception!
      try { 
        vintage0.criaMala("Azul", "Azul", 655.8, true, (-1027), 1, 1550L, (-929), "N<\"dW>IHr1LsGAC", (-929), boolean0, (-929));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test007()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.criaMala((String) null, "Custo do transporte: ", 2810, true, 2810, 3645, 261L, 3645, "", 3645, (Boolean) null, 1386.34F);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test008()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Tamanho tamanho0 = Tamanho.S;
      Padrao padrao0 = Padrao.liso;
      // Undeclared exception!
      try { 
        vintage0.criaTshirt("", "", 2326.57981574, true, 10, 45, 10, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test009()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Long long0 = Long.getLong("0YFrQ2q[N)~(M3]o", (long) (-597));
      // Undeclared exception!
      try { 
        vintage0.criaSapatilha("F0[!", "F0[!", 0.0, false, (-2272), (-1152), long0, 2883, true, "0YFrQ2q[N)~(M3]o", (-775), true, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test010()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      HashMap<Long, Transportadora> hashMap2 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap2);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      Long long0 = new Long(0);
      // Undeclared exception!
      try { 
        vintage0.criaSapatilha((String) null, "", 0.0, false, 0, 0, long0, 1738, false, "ValorBase * (1 + MargemLucroTransportadora + Imposto) * 0,7", 1738, false, (-1140.9411));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test011()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Boolean boolean0 = Boolean.FALSE;
      vintage0.povoamento();
      vintage0.criaMala(" Margem de lucro: ", " Margem de lucro: ", 0.0, true, 0, 0, 123456L, 0, " Margem de lucro: ", (-1069), boolean0, 0);
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test012()  throws Throwable  {
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("dados.ser");
      FileSystemHandling.appendStringToFile(evoSuiteFile0, "");
      Vintage vintage0 = Vintage.load();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test013()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      vintage0.todosArtigos();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test014()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador((String) null, (String) null, "", 1449, (String) null);
      String string0 = vintage0.meusArtigos();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test015()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.povoamento();
      String string0 = vintage0.imprimeTransportadoraspremium();
      assertEquals("Transportadora:: { Id: 1 Nome: Fedex Valor da encomenda pequena: 10.0 Valor da encomenda m\u00E9dia: 20.0 Valor da encomenda grande: 30.0 Imposto: 0.23 Margem de lucro: 0.5 \u00C9 premium: true Formula atual: 3 Total lucro: 0.0}\n", string0);
  }

  @Test(timeout = 4000)
  public void test016()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.imprimeTransportadorasNormais();
      assertEquals("Transportadora:: { Id: 2 Nome: Feliz Valor da encomenda pequena: 1.0 Valor da encomenda m\u00E9dia: 2.0 Valor da encomenda grande: 3.0 Imposto: 0.23 Margem de lucro: 0.15 \u00C9 premium: false Formula atual: 1 Total lucro: 0.0}\n", string0);
  }

  @Test(timeout = 4000)
  public void test017()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.imprimeFaturasVendas();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test018()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.imprimeFaturasCompras();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test019()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.imprimeCarrinho();
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test020()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, (Map<String, Long>) null);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      HashMap<Long, Transportadora> hashMap3 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap3);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 0);
      long long0 = vintage0.getUtilizador();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test021()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      long long0 = vintage0.getUtilizador();
      assertEquals(2L, long0);
  }

  @Test(timeout = 4000)
  public void test022()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      GestorEncomendas gestorEncomendas0 = vintage0.getGestor_Encomendas();
      assertNull(gestorEncomendas0);
  }

  @Test(timeout = 4000)
  public void test023()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos((Map<Integer, Artigo>) null);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      LocalDate localDate0 = vintage0.getData();
      assertNull(localDate0);
  }

  @Test(timeout = 4000)
  public void test024()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      assertEquals((-1L), vintage0.getUtilizador());
      
      vintage0.povoamento();
      Boolean boolean0 = Boolean.TRUE;
      String string0 = vintage0.filtraMalasNovo(boolean0);
      assertEquals("Mala:: {Artigo:: { C\u00F3digo de barras: A3 Descri\u00E7\u00E3o: Mochila escolar Marca: JanSport Pre\u00E7o base: 139.99 Novo: true Estado de uso: 7 N\u00FAmero de utilizadores: 20 Disponivel: true Id da transportadora: 2 Id do vendedor: 1 } Dimens\u00E3o: 50 Material: Poli\u00E9ster Ano da Cole\u00E7\u00E3o: 2023 Premium: false Valoriza\u00E7\u00E3o: 3.5}\nMala:: {Artigo:: { C\u00F3digo de barras: A6 Descri\u00E7\u00E3o: Mala de ombro pequena Marca: Guess Pre\u00E7o base: 119.9 Novo: true Estado de uso: 6 N\u00FAmero de utilizadores: 12 Disponivel: true Id da transportadora: 2 Id do vendedor: 1 } Dimens\u00E3o: 30 Material: Couro sint\u00E9tico Ano da Cole\u00E7\u00E3o: 2023 Premium: false Valoriza\u00E7\u00E3o: 3.2}\n", string0);
  }

  @Test(timeout = 4000)
  public void test025()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.faturas_venda();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test026()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      String string0 = vintage0.faturas_compras();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test027()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.adicinonarTransportadora((String) null, (-2911.01777), 0.0, (-1551.0), 10.5262257829069, (-2911.01777), false, (-2225));
      boolean boolean0 = vintage0.existe_transpotadoraNormal(1L);
      assertEquals((-1L), vintage0.getUtilizador());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test028()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>(137);
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      HashMap<String, String> hashMap2 = new HashMap<String, String>();
      HashMap<String, Long> hashMap3 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, hashMap2, hashMap3);
      HashMap<Long, Encomenda> hashMap4 = new HashMap<Long, Encomenda>(137, 137);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap4);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0);
      boolean boolean0 = vintage0.existeIdUtilizador(137);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test029()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.adicionaUtilizador((String) null, (String) null, "", 1449, (String) null);
      String string0 = vintage0.encomendasRealizadas();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test030()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      assertEquals(2L, vintage0.getUtilizador());
      
      String string0 = vintage0.TransportadoraMaiorVolume();
      assertEquals("Transportadora:: { Id: 1 Nome: Fedex Valor da encomenda pequena: 10.0 Valor da encomenda m\u00E9dia: 20.0 Valor da encomenda grande: 30.0 Imposto: 0.23 Margem de lucro: 0.5 \u00C9 premium: true Formula atual: 3 Total lucro: 0.0}", string0);
  }

  @Test(timeout = 4000)
  public void test031()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, menu0, 10);
      // Undeclared exception!
      try { 
        vintage0.vendedorMaior(10, (LocalDate) null, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test032()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, menu0);
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        vintage0.vendedorFacturouTempo(localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test033()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.removerTodosArtigosCarrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test034()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.meusArtigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test035()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      // Undeclared exception!
      try { 
        vintage0.imprimeTransportadoraspremium();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test036()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      // Undeclared exception!
      try { 
        vintage0.imprimeTransportadorasNormais();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test037()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      // Undeclared exception!
      try { 
        vintage0.imprimeFormulasNormais();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test038()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      // Undeclared exception!
      try { 
        vintage0.imprimeFormulas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test039()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Long long0 = new Long(1L);
      // Undeclared exception!
      try { 
        vintage0.finalizarEncomendaPorId(long0, (LocalDate) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test040()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.finalizarEncomenda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test041()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = new Boolean((String) null);
      vintage0.setGestor_Artigos((Gestor_Artigos) null);
      // Undeclared exception!
      try { 
        vintage0.filtraTshirtsNovo(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test042()  throws Throwable  {
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0);
      // Undeclared exception!
      try { 
        vintage0.filtraSapatilhasTamanho(10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test043()  throws Throwable  {
      HashMap<Long, Transportadora> hashMap0 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage((Gestor_Artigos) null, (Gestor_Utilizadores) null, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      Boolean boolean0 = Boolean.TRUE;
      // Undeclared exception!
      try { 
        vintage0.filtraSapatilhasNovo(boolean0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test044()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Boolean boolean0 = new Boolean(false);
      gestor_Artigos0.criar_artigo_mala("XO7;K+]B0", (String) null, 0.0, true, (-2121), (-2121), (-2121), (-2L), (-2121), "XO7;K+]B0", (-2121), boolean0, 793.6071F);
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.filtraMalasMarca("#5ttD~e5Jb f^");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test045()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, (Gestor_Transportadoras) null, menu0, 9);
      // Undeclared exception!
      try { 
        vintage0.existe_transpotadoraNormal((-4631L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test046()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      try { 
        vintage0.encomendasDevolver(2369L);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // N\u00E3o exite nenhuma encomenda com o ID 2369
         //
         verifyException("GestorEncomendas", e);
      }
  }

  @Test(timeout = 4000)
  public void test047()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, map0, hashMap2);
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.encomendasDevolver((-404L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test048()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = vintage0.getData();
      // Undeclared exception!
      try { 
        vintage0.comprarArtigo((Long) null, "~yYeb&$6m+#", localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test049()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Encomenda> hashMap1 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap1);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, menu0);
      LocalDate localDate0 = MockLocalDate.now();
      // Undeclared exception!
      try { 
        vintage0.compradorMaior((-1200), localDate0, localDate0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test050()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Transportadora> hashMap1 = new HashMap<Long, Transportadora>();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap1);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.adicionaUtilizador("", "8QDUOr&z", "#H341i", 0L, "8QDUOr&z");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test051()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.artigoIndisponivel("Digite o n\u00FAmero de utilizadores que o artigo teve: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Digite o n\u00FAmero de utilizadores que o artigo teve:  n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test052()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.ofEpochDay((-2L));
      try { 
        vintage0.adicionarArtigoCarrinhoPorID("Pl[]g;nvE}~_D?y8", 306L, localDate0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Pl[]g;nvE}~_D?y8 n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test053()  throws Throwable  {
      Vintage vintage0 = Vintage.carregarEstado();
      assertNull(vintage0);
  }

  @Test(timeout = 4000)
  public void test054()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.getGestor_Artigos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test055()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      vintage0.adicionaUtilizador((String) null, (String) null, (String) null, 0L, "9");
      Month month0 = Month.OCTOBER;
      LocalDate localDate0 = MockLocalDate.of(2011, month0, 18);
      String string0 = vintage0.maiorVendedor(9, localDate0, localDate0);
      assertEquals("null vendeu 0 artigos\n", string0);
  }

  @Test(timeout = 4000)
  public void test056()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      vintage0.adicionaUtilizador((String) null, (String) null, (String) null, 0L, "9");
      Month month0 = Month.OCTOBER;
      LocalDate localDate0 = MockLocalDate.of(2011, month0, 18);
      String string0 = vintage0.maiorVendedor((-387), localDate0, localDate0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test057()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      vintage0.vendedorMaior(2883, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test058()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      LocalDate localDate0 = vintage0.getData();
      vintage0.maiorComprador((-597), localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test059()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      vintage0.maiorComprador(3032, localDate0, localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test060()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      String string0 = vintage0.vendedorFacturouTempo((LocalDate) null, (LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
      assertEquals("N\u00E3o h\u00E1 vendedores", string0);
  }

  @Test(timeout = 4000)
  public void test061()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = vintage0.vendedorFacturou();
      assertEquals("N\u00E3o h\u00E1 vendedores", string0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test062()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      vintage0.adicionaUtilizador((String) null, (String) null, (String) null, 0L, "9");
      try { 
        vintage0.finalizarEncomenda();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O carrinho est\u00E1 vazio!
         //
         verifyException("Utilizador", e);
      }
  }

  @Test(timeout = 4000)
  public void test063()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      vintage0.meusArtigos();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test064()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      boolean boolean0 = vintage0.verificaPassword("", (String) null);
      assertEquals((-1L), vintage0.getUtilizador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test065()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getGestor_Utilizadores();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test066()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.todosArtigos();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test067()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.existeTranspotadora(1556L);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test068()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaVenda((-7L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test069()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.TransportadoraMaiorVolume();
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap$HashIterator", e);
      }
  }

  @Test(timeout = 4000)
  public void test070()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      vintage0.setGestor_Encomendas(gestorEncomendas0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test071()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeFormulas();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test072()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.tamanhoEncomenda(1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("GestorEncomendas", e);
      }
  }

  @Test(timeout = 4000)
  public void test073()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Utilizadores((Gestor_Utilizadores) null);
      // Undeclared exception!
      try { 
        vintage0.existeEmail("YUQXJ1K-9~T");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test074()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Long long0 = new Long(0);
      // Undeclared exception!
      try { 
        vintage0.criaSapatilha("Cinza/Preto", "Cinza/Preto", (-1764.3280821831), true, 0, 0, long0, 0, true, "KpA,HWUD:", 5, false, 1L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test075()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.existeEmail("0YFrQ2q[N)~(M3]o");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test076()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Clock clock0 = MockClock.systemUTC();
      LocalDate localDate0 = MockLocalDate.now(clock0);
      // Undeclared exception!
      try { 
        vintage0.ColocarVenderMala(331L, localDate0, "jYyZU_!XC<X|8bE", (String) null, 2883, true, 2883, 1785, (-2L), 3655, "", (-2205), false, 331L);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test077()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeFormulasNormais();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test078()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.faturas_compras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test079()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.getGestor_Encomendas();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test080()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.avancarTempo((LocalDate) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test081()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      Tamanho tamanho0 = Tamanho.XL;
      Padrao padrao0 = Padrao.palmeiras;
      // Undeclared exception!
      try { 
        vintage0.criaTshirt("", "OyU~5", (-1287.0), false, 10, 10, 10, tamanho0, padrao0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test082()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos((Map<Integer, Artigo>) null);
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 40);
      vintage0.imprimeTransportadoras();
      assertEquals(40L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test083()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraSapatilhasCor("");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test084()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.existe_transpotadoraNormal(0L);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test085()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.login_utlizador("\u20AC\n");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test086()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      Boolean boolean0 = Boolean.TRUE;
      vintage0.filtraTshirtsNovo(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test087()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.imprimeTransportadorasNormais();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test088()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraMalasDimensao(1449);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test089()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraMalasMaterial("");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test090()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Padrao padrao0 = Padrao.liso;
      vintage0.filtraTshirtsPadrao(padrao0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test091()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      // Undeclared exception!
      try { 
        vintage0.alteraFormula(123456L, 439);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Transportadoras", e);
      }
  }

  @Test(timeout = 4000)
  public void test092()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos((Map<Integer, Artigo>) null);
      HashMap<Long, Utilizador> hashMap0 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap1 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap0, map0, hashMap1);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0, 40);
      vintage0.existeArtigoId("Gestor de Transportadoras:: { Informa\u00E7\u00F5es das transportadoras: java.util.HashMap@0000000007}\n");
      assertEquals(40L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test093()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Period period0 = Period.ofYears(0);
      IsoChronology isoChronology0 = period0.getChronology();
      ZoneOffset zoneOffset0 = ZoneOffset.MAX;
      LocalDate localDate0 = MockIsoChronology.dateNow(isoChronology0, (ZoneId) zoneOffset0);
      vintage0.setData(localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test094()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraAMarcaSapatilhas("");
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test095()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.encomendasRealizadas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test096()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.povoamento();
      vintage0.povoamento();
      assertEquals(2L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test097()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraSapatilhasTamanho(2888);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test098()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      HashMap<Long, Transportadora> hashMap0 = new HashMap<Long, Transportadora>(0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras(hashMap0);
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, menu0);
      // Undeclared exception!
      try { 
        vintage0.existeIdUtilizador(0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test099()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.faturas_venda();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test100()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      Boolean boolean0 = new Boolean(false);
      vintage0.filtraMalasNovo(boolean0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test101()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      try { 
        vintage0.adicionarArtigoCarrinho((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo null n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test102()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      long long0 = vintage0.getUtilizador();
      assertEquals((-1L), long0);
  }

  @Test(timeout = 4000)
  public void test103()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      boolean boolean0 = vintage0.existe_transpotadoraPremium(1L);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test104()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.imprimeTransportadoraspremium();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test105()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      String string0 = vintage0.VintageFaturou();
      assertEquals("A Vintage faturou 0.0\u20AC\n", string0);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test106()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, map0, hashMap2);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      try { 
        vintage0.removerArtigosCarrinho("U#[?4");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo U#[?4 n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test107()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      HashMap<Long, Utilizador> hashMap1 = new HashMap<Long, Utilizador>();
      Map<String, String> map0 = ZoneId.SHORT_IDS;
      HashMap<String, Long> hashMap2 = new HashMap<String, Long>();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores(hashMap1, map0, hashMap2);
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas();
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, (Menu) null);
      Tamanho tamanho0 = Tamanho.XL;
      String string0 = vintage0.filtraTshirtsTamanho(tamanho0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test108()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setUtilizador(284L);
      assertEquals(284L, vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test109()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.encomendasEmitidasVendedor((-1L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test110()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasCompras();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test111()  throws Throwable  {
      HashMap<Integer, Artigo> hashMap0 = new HashMap<Integer, Artigo>();
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, (GestorEncomendas) null, gestor_Transportadoras0, menu0);
      Boolean boolean0 = Boolean.TRUE;
      String string0 = vintage0.filtraSapatilhasNovo(boolean0);
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test112()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.artigoID("N\u00E3o h\u00E1 vendedores");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test113()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.filtraTshirtsMarca((String) null);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test114()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      vintage0.setGestor_Trasportadoras((Gestor_Transportadoras) null);
      // Undeclared exception!
      try { 
        vintage0.existeTranspotadora(2883);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Vintage", e);
      }
  }

  @Test(timeout = 4000)
  public void test115()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.encomendasDevolvidas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test116()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.imprimeCarrinho();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test117()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.filtraMalasColecao(1449);
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test118()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.artigoDisponivel("Guess");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // O artigo Guess n\u00E3o existe!
         //
         verifyException("Gestor_Artigos", e);
      }
  }

  @Test(timeout = 4000)
  public void test119()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      vintage0.getGestor_Trasportadoras();
      assertEquals((-1L), vintage0.getUtilizador());
  }

  @Test(timeout = 4000)
  public void test120()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, (Gestor_Utilizadores) null, gestorEncomendas0, gestor_Transportadoras0, menu0);
      String string0 = vintage0.filtraMalasMarca("#5ttD~e5Jb f^");
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test121()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      try { 
        vintage0.salvarEstado();
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Error in writing to file
         //
         verifyException("org.evosuite.runtime.mock.java.io.NativeMockedIO", e);
      }
  }

  @Test(timeout = 4000)
  public void test122()  throws Throwable  {
      Vintage vintage0 = new Vintage();
      // Undeclared exception!
      try { 
        vintage0.imprimeFaturasVendas();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test123()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      assertNotNull(vintage0);
      
      LocalDate localDate0 = vintage0.getData();
      Long long0 = new Long((-597));
      boolean boolean0 = vintage0.comprarArtigo(long0, "0YFrQ2q[N)~(M3]o", localDate0);
      assertEquals((-1L), vintage0.getUtilizador());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test124()  throws Throwable  {
      Vintage vintage0 = Vintage.load();
      // Undeclared exception!
      try { 
        vintage0.imprime1FaturaCompra((-475L));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Utilizadores", e);
      }
  }

  @Test(timeout = 4000)
  public void test125()  throws Throwable  {
      Gestor_Artigos gestor_Artigos0 = new Gestor_Artigos();
      Gestor_Utilizadores gestor_Utilizadores0 = new Gestor_Utilizadores();
      HashMap<Long, Encomenda> hashMap0 = new HashMap<Long, Encomenda>();
      GestorEncomendas gestorEncomendas0 = new GestorEncomendas(hashMap0);
      Gestor_Transportadoras gestor_Transportadoras0 = new Gestor_Transportadoras();
      Menu menu0 = new Menu();
      Vintage vintage0 = new Vintage(gestor_Artigos0, gestor_Utilizadores0, gestorEncomendas0, gestor_Transportadoras0, menu0);
      Vintage vintage1 = null;
      try {
        vintage1 = new Vintage(vintage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Gestor_Artigos", e);
      }
  }
}
